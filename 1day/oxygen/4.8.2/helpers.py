#!/usr/bin/python3
import requests, sys, pickle, re

# Nonce helper
def get_nonce(host):
    html_data = requests.get(host, cookies=load_cookies())
    # Ugly hack =)
    part = re.search('CtBuilder(.*)nonce":"(.*?)",', str(html_data.text))
    if part:
        nonce = re.search('nonce":"(.*?)",', str(part.group(0)))
        return nonce.group(1)
    else:
        print("We could not fetch the Nonce.")
        print("It might be a problem with:")
        print(" -> _cookies file / login credentials. (try: rm _cookies and run again)")
        print(" -> It might be a problem with the URL, is oxygen running on the requested page?")
        exit()

# PostID helper
def get_post_id(host):
    html_data = requests.get(host, cookies=load_cookies())
    # Ugly hack =)
    part = re.search('CtBuilder(.*)postId":"(.*?)",', str(html_data.text))
    if part:
        post_id = re.search('postId":"(.*?)",', str(part.group(0)))
        return post_id.group(1)
    else:
        print("We could not fetch the post ID.")
        print("It might be a problem with:")
        print(" -> _cookies file / login credentials. (try: rm _cookies and run again)")
        print(" -> the URL, is oxygen running on the requested page?")
        exit()

# Cookie helpers
def save_cookies(requests_cookiejar, filename = '_cookies'):
    with open(filename, 'wb') as f:
        pickle.dump(requests_cookiejar, f)

def load_cookies(filename='_cookies'):
    with open(filename, 'rb') as f:
        return pickle.load(f)

# Extraction helper
def extract_cookies(host, username, password):
    # Contacts
    wp_login = host+'/wp-login.php'
    wp_admin = host+'/wp-admin/'

    print("Extracting cookies from:", host)

    # Extract 
    with requests.Session() as s:
        headers1 = { 'Cookie':'wordpress_test_cookie=WP Cookie check' }
        datas={ 
            'log':username, 'pwd':password, 'wp-submit':'Log In', 
            'redirect_to':wp_admin, 'testcookie':'1'  
        }
        s.post(wp_login, headers=headers1, data=datas)
        resp = s.get(wp_admin)
        #print(resp.text)
        print("Status:",resp.status_code)

        # Save session to file
        save_cookies(s.cookies, '_cookies')


