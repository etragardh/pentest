<?php
namespace BricksUltimate\Elements;

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

use BricksUltimate\Helpers;

class WooAppliedCoupons extends \Bricks\Element {
	public $category 	= 'coupon';
	public $name 		= 'bu-coupons';
	public $icon 		= 'ti-money';
	public $called 		= false;

	// Return localized element label
	public function get_label() {
		return esc_html__( '(BU)Applied Coupons', 'bricksultimate' );
	}

	// Set builder control groups
	public function set_controls() {

		$this->controls['typographyText'] = [
			'tab' 		=> 'content',
			'type'      => 'typography',
			'label'     => esc_html__('Typography', 'bricks'),
			'small' 	=> true,
			'inline' 	=> true,
			'css' 		=> [
				[
					'selector' 	=> '.bu-coupon-code',
					'property'  => 'font',
				]
			]
		];

		$this->controls['code'] = [
			'tab' 		=> 'content',
			'type'      => 'typography',
			'label'     => esc_html__('Coupon code', 'bricks'),
			'small' 	=> true,
			'inline' 	=> true,
			'css' 		=> [
				[
					'selector' 	=> '.bu-coupon-code strong',
					'property'  => 'font',
				]
			]
		];

		$this->controls['price'] = [
			'tab' 		=> 'content',
			'type'      => 'typography',
			'label'     => esc_html__('Price', 'bricks'),
			'small' 	=> true,
			'inline' 	=> true,
			'css' 		=> [
				[
					'selector' 	=> '.woocommerce-Price-amount.amount',
					'property'  => 'font',
				]
			]
		];

		$this->controls['remove'] = [
			'tab' 		=> 'content',
			'type'      => 'typography',
			'label'     => esc_html__('Remove link', 'bricks'),
			'small' 	=> true,
			'inline' 	=> true,
			'css' 		=> [
				[
					'selector' 	=> '.bu-remove-coupon',
					'property'  => 'font',
				]
			]
		];
	}

	// Enqueue element styles and scripts
	public function enqueue_scripts() {
		wp_enqueue_style( 'bu-coupon', Helpers::get_asset_url('css') . 'coupon.min.css', [], filemtime(Helpers::get_asset_path('css') . 'coupon.min.css'), 'all' );
		wp_enqueue_script( 'bu-coupon-form', Helpers::get_asset_url('js') . 'couponform.min.js', [], filemtime(Helpers::get_asset_path('js') . 'couponform.min.js' ),true);

		if( ! $this->called ) {
			wp_localize_script( 
				'bu-coupon-form', 
				'COUPON', 
				array( 
					'nonce' => wp_create_nonce( "bu-applied-coupons" ), 
					'remove_coupon_nonce' => wp_create_nonce( 'remove-coupon' ),
					'i18n_remove' => __( 'Remove', 'woocommerce' ),
					'i18n_fstext' => __( 'Free shipping coupon', 'woocommerce' ),
					'i18n_discount' => __( 'Discount', 'bricksultimate' )
				) 
			);
			$this->called = true;
		}
	}

	// Render element HTML
	public function render() {
		if( bricks_is_builder() || Helpers::isBricksBuilderActive() ) {
			echo "<div {$this->render_attributes("_root")}>";
			echo '<div class="cart-discount coupon-discount5">
					<span class="bu-coupon-code">Discount: <strong>discount5</strong> <a href="#" class="bu-remove-coupon" data-coupon="discount5">[Remove]</a>
					</span>
					<span class="cart-discount-value">-<span class="woocommerce-Price-amount amount"><bdi><span class="woocommerce-Price-currencySymbol">$</span>5</bdi></span>
					</span>
				</div>';
			echo "</div>";
		} else {
			echo "<div {$this->render_attributes("_root")}>";
			\BricksUltimate\WooCommerce::appliedCoupons();
			echo "</div>";
		}
	}
}