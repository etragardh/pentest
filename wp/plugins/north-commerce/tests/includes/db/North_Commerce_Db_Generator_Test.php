<?php
/*
 * A PHP file for testing out our SQL generator
 */
require_once(__DIR__ . '/../../north-commerce-test-case.php');

class North_Commerce_Db_Generator_Test extends North_Commerce_Db_Test_Case
{

    public function testCreateTableSql()
    {
        $gen = new North_Commerce_Db_Generator();

        $prefix = "unit_test_" . nc_random_token() . "_";
        $t1 = "customers";
        $t2 = "orders";

		$cols1 =  [
			'id' => ['type' => 'CHAR(28)', 'null' => false],
			'created' => ['type' => 'TIMESTAMP'],
            'name' => ['type' => 'VARCHAR(128)', 'null' => false, 'index' => true],
            'email' => ['type' => 'VARCHAR(255)', 'null' => false, 'index' => true],
        ];

		$cols2 = [
			'id' => ['type' => 'CHAR(28)', 'null' => false],
			'created' => ['type' => 'TIMESTAMP'],
            'qty' => ['type' => 'INT', 'index' => true, 'null' => true],
            'cost' => ['type' => 'MONEY', 'index' => false, 'null' => true],
            'customer_id' => ['type' => 'REF', 'null' => true, 'ref_table' => $t1]
        ];

		$create1 = $gen->createTableSql($prefix, $t1,$cols1);
		$finalize1 = implode("", $gen->finalizeTableSql($prefix, $t1, $cols1));
        $create2 = $gen->createTableSql($prefix, $t2, $cols2);
		$finalize2 = implode("", $gen->finalizeTableSql($prefix, $t2, $cols2));

		$this->assertStringContainsString("email VARCHAR(255) NOT NULL", $create1);
        $this->assertStringContainsString("CREATE TABLE {$prefix}$t2", $create2);
        $this->assertStringContainsString("qty INT NULL", $create2);
        $this->assertStringContainsString("customer_id CHAR(" . NC_DB_PUBID_LENGTH . ") NULL", $create2);
        $this->assertStringContainsString("REFERENCES {$prefix}$t1(id)", $finalize2);
		$this->assertStringContainsString("ALTER TABLE $prefix$t2", $finalize2);

		$this->registerTestTable("$prefix$t2");
		$this->registerTestTable("$prefix$t1");

		$statements = [
			$create1, $create2, $finalize1, $finalize2
		];

		$agent = North_Commerce_Db_Agent::instance();
		foreach($statements as $sql) {
			$agent->query($sql);
		}

		$insert_ex = false;
		try {
			$agent->query("INSERT INTO $prefix$t2(qty, cost, customer_id) VALUES(10, 100, 7)");
		} catch(Exception $ex) {
			$insert_ex = $ex;
		}
		$this->assertInstanceOf(Exception::class, $insert_ex);


		$id = $agent->idManager()->freshId('customers');
		$agent->query("INSERT INTO $prefix$t1(id,name,email) VALUES('$id', 'bob', 'bob@nowhere.com')");
		$bob_id = $agent->getVar("SELECT id FROM $prefix$t1 WHERE name = 'bob'");
		$this->assertEquals($id, $bob_id);

		$id = $agent->idManager()->freshId('orders');
		$agent->query("INSERT INTO $prefix$t2(id, qty, cost, customer_id) VALUES('$id', 10, 100, '$bob_id')");
		$qty = $agent->getVar("SELECT qty FROM $prefix$t2 WHERE customer_id = '$bob_id'");
		$this->assertEquals(10, $qty);
    }

	public function testCreateTableSqlWithIndexes()
	{
        $prefix = "unit_test_" . nc_random_token() . "_";
        $table_name = "widgets";
		$cols = [
			'name' => [
				'type' => 'VARCHAR(128)', 'index' => true
			],
			'slug' => [
				'type' => 'VARCHAR(128)', 'unique' => true,
			],
			'quantity' => [
				'type' => 'INT', 'index' => true, 'null' => false
			]
		];

		$gen = new North_Commerce_Db_Generator();
		$sql = $gen->createTableSql($prefix, $table_name, $cols);

		$this->assertStringContainsString("INDEX(name),", $sql);
		$this->assertStringContainsString("UNIQUE(slug),", $sql);
		$this->assertStringContainsString("quantity INT NOT NULL,", $sql);
	}


}
