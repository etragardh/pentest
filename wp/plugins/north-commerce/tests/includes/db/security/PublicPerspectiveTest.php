<?php
/*
 * A PHP file for testing out our public perspective
 */

use NorthCommerce\Db\Schema;
use NorthCommerce\Db\Security\PublicPerspective;
use NorthCommerce\Testing\EntityFactory;

require_once(__DIR__ . '/../../../north-commerce-test-case.php');


class PublicPerspectiveTest extends North_Commerce_Db_Test_Case
{

	function testSlug()
	{
		$p = new PublicPerspective();
		$this->assertEquals('public', $p->slug());
	}

	function testAppliesTo() {
		$ef = EntityFactory::instance();
		$admin = $ef->newWpUser(['role' => 'administrator']);
		$customer = $ef->newWpUser();
		$public = false;

		$p = new PublicPerspective();
		$this->assertFalse($p->appliesTo($admin));
		$this->assertFalse($p->appliesTo($customer));
		$this->assertTrue($p->appliesTo($public));
	}

	public function testCustomizeSchema() {
		$schema = new Schema();
		$p = new PublicPerspective();
		$all = $schema->getTables();
		$customized = $p->customizeSchema($all);

		$this->assertTrue(isset($all['products']['cols']['cost_of_goods_price']));
		$this->assertTrue(isset($all['products']['cols']['profit']));
		$this->assertFalse(isset($customized['products']['cols']['cost_of_goods_price']));
		$this->assertFalse(isset($customized['products']['cols']['profit']));

		$this->assertTrue(isset($all['customers']['cols']['first_name']));
		$this->assertTrue(isset($all['customers']['cols']['last_name']));
		$this->assertTrue(isset($all['customers']['cols']['phone']));
		$this->assertTrue(isset($all['customers']['cols']['email']));
		$this->assertTrue(isset($all['customers']['cols']['total_amount_spent']));

		$this->assertTrue(isset($customized['customers']['cols']['email']));
		$this->assertFalse(isset($customized['customers']['cols']['first_name']));
		$this->assertFalse(isset($customized['customers']['cols']['last_name']));
		$this->assertFalse(isset($customized['customers']['cols']['phone']));
		$this->assertFalse(isset($customized['customers']['cols']['total_amount_spent']));

	}
}
