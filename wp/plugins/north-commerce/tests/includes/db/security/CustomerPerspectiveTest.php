<?php
/*
 * A PHP file for testing out our customer perspective
 */

use NorthCommerce\Db\Schema;
use NorthCommerce\Db\Security\CustomerPerspective;
use NorthCommerce\Testing\EntityFactory;

require_once(__DIR__ . '/../../../north-commerce-test-case.php');


class CustomerPerspectiveTest extends North_Commerce_Db_Test_Case
{

	function testSlug()
	{
		$p = new CustomerPerspective();
		$this->assertEquals('customer', $p->slug());
	}

	function testAppliesTo() {
		$ef = EntityFactory::instance();
		$customer = $ef->newWpUser();
		$admin = $ef->newWpUser(['role' => 'administrator']);

		$p = new CustomerPerspective();
		$this->assertFalse($p->appliesTo($admin));
		$this->assertTrue($p->appliesTo($customer));
		$this->assertFalse($p->appliesTo(null));
	}

	public function testCustomizeSchema() {
		$schema = new Schema();
		$p = new CustomerPerspective();
		$all = $schema->getTables();
		$customized = $p->customizeSchema($all);
		$this->assertEquals(count($all) - 1, count($customized));
		$this->assertTrue(isset($all['products']['cols']['cost_of_goods_price']));
		$this->assertTrue(isset($all['products']['cols']['profit']));
		$this->assertFalse(isset($customized['products']['cols']['cost_of_goods_price']));
		$this->assertFalse(isset($customized['products']['cols']['profit']));
	}
}
