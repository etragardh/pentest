<?php
/*
 * A PHP file for testing out InitShippingDetailsEffect
 */

use NorthCommerce\Db\Collections\ShippingDetailTypes;
use NorthCommerce\Db\Effects\InitShippingDetailsEffect;
use NorthCommerce\Testing\Fixtures\Includes\Db\Effects\Init_Shipping_Details_Effect_Fixture;

require_once(__DIR__ . '/../../../north-commerce-test-case.php');

class InitShippingDetailsEffectTest extends North_Commerce_Test_case
{

	public function testBehaviorWithFlatRate()
	{
		Init_Shipping_Details_Effect_Fixture::use(function(Init_Shipping_Details_Effect_Fixture $f) {
			$values = [
				'order_id' => $f->order['id'],
		   		'shipping_detail_type_id' => ShippingDetailTypes::planned()->id,
				'shipping_rates_internal_id' => $f->internal_rate['id']
			];

			$sd = InitShippingDetailsEffect::run($values);

			$f->assertInternalRateMatches($sd, $f->internal_rate);
			$this->ea->store('shipping_details', $sd);
		});
	}

	public function testBehaviorWithCalculatedRate()
	{
		Init_Shipping_Details_Effect_Fixture::use(function(Init_Shipping_Details_Effect_Fixture $f) {
			$values = [
				'order_id' => $f->order['id'],
				'shipping_detail_type_id' => ShippingDetailTypes::planned()->id,
				'shipping_rates_easypost_id' => $f->easypost_rate['id'],
				'carrier' => $f->easypost_carrier,
				'service' => $f->easypost_service,
			];

			$sd = InitShippingDetailsEffect::run($values);

			$f->assertEasypostRateMatches($sd, $f->easypost_rate);
		});
	}

}
