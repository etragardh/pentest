<?php
/*
 * A PHP file for testing out our customer payment method
 * init in a stripe context
 */

use NorthCommerce\Db\Effects\InitStripeCustomerPaymentMethodEffect;

require_once(__DIR__ . '/../North_Commerce_Db_Test_Case.php');

class InitStripeCustomerPaymentMethodEffectTest	extends North_Commerce_Db_Test_Case
{

	public function testBehaviorNewCustomer()
	{
		$c = $this->ef->newCustomer();

		$payload = InitStripeCustomerPaymentMethodEffect::run(['customer_id' => $c['id']]);
		$this->assertIsArray($payload);
		$this->assertIsString($payload['token']);

		$sc  = (new North_Commerce_Stripe())->stripe_client();
		$stripe_customer = $sc->customers->retrieve($payload['token']);
		$this->assertEquals($c['email'], $stripe_customer->email);
	}

	public function testBehaviorExistingCustomer()
	{
		$c = $this->ef->newCustomer();

		$payload1 = InitStripeCustomerPaymentMethodEffect::run(['customer_id' => $c['id']]);
		$payload2 = InitStripeCustomerPaymentMethodEffect::run(['customer_id' => $c['id']]);
		$this->assertEquals($payload1['token'],
							$payload2['token']);

		$sc  = (new North_Commerce_Stripe())->stripe_client();
		$stripe_customer = $sc->customers->retrieve($payload1['token']);
		$this->assertEquals($c['email'], $stripe_customer->email);
	}
}
