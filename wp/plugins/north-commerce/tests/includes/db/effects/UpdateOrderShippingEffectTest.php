<?php
/*
 * A PHP file for testing out UpdateOrderShippingEffect
 */

use NorthCommerce\Db\Effects\UpdateOrderShippingEffect;
use NorthCommerce\Testing\Fixtures\Includes\Db\Effects\Update_Order_Shipping_Effect_Fixture;

require_once(__DIR__ . '/../../../north-commerce-test-case.php');

class UpdateOrderShippingEffectTest extends North_Commerce_Test_case
{
	/**
	 * @dataProvider behaviorDataProvider
	 */
	public function testBehavior($name)
	{
		Update_Order_Shipping_Effect_Fixture::use(function(Update_Order_Shipping_Effect_Fixture $f) use($name){
			$order_attr = "order_with_{$name}";
			$order = $f->$order_attr;
			$shipping_attr = "{$name}_shipping";
			$shipping = $f->$shipping_attr;
			$updated = UpdateOrderShippingEffect::run($order);
			$this->assertEquals($shipping, $updated['shipping']);
			$this->assertEquals($updated['total'], $updated['subtotal'] + $updated['shipping'] + $updated['tax']);
		});
	}

	public function behaviorDataProvider()
	{
		return [
			["planned"],
			["actual"],
			["planned_and_actual"]
		];
	}

}
