<?php
/*
 * A PHP file for testing out our customer address update effect.
 */

use NorthCommerce\Db\Effects\MaybeUpdateCustomerUsingAddressEffect;

require_once(__DIR__ . '/../North_Commerce_Db_Test_Case.php');

class MaybeUpdateCustomerUsingAddressEffectTest  extends North_Commerce_Db_Test_Case
{

	public function testBehaviorBlankCustomer()
	{
		$email = $this->ef->newEmailAddress();

		$c = $this->ea->create('customers', [
			'email' => $email,
			'marketing_optin' => false
		]);

		$this->assertNull($c['first_name']);
		$this->assertNull($c['last_name']);
		$this->assertNull($c['phone']);

		$address = $this->ef->newAddress(['customer' => $c]);
		$address = MaybeUpdateCustomerUsingAddressEffect::run($address);

		$c_updated = $this->ea->ref($c['id']);

		$this->assertEquals($address['first_name'], $c_updated['first_name']);
		$this->assertEquals($address['last_name'], $c_updated['last_name']);
		$this->assertEquals($address['phone'], $c_updated['phone']);
	}

	public function testBehaviorFilledCustomer()
	{
		$c = $this->ef->newCustomer(['first_name' => nc_random_token()]);

		$this->assertNotNull($c['first_name']);
		$this->assertNotNull($c['last_name']);
		$this->assertNotNull($c['phone']);

		$address = $this->ef->newAddress(['customer' => $c,
										  'first_name' => nc_random_token(),
										  'last_name' => nc_random_token(),
										  'phone' => nc_random_token()]);
		$address = MaybeUpdateCustomerUsingAddressEffect::run($address);

		$c_updated = $this->ea->ref($c['id']);

		$this->assertNotEquals($address['first_name'], $c_updated['first_name']);
		$this->assertNotEquals($address['last_name'], $c_updated['last_name']);
		$this->assertNotEquals($address['phone'], $c_updated['phone']);

		$this->assertEquals($c['first_name'], $c_updated['first_name']);
		$this->assertEquals($c['last_name'], $c_updated['last_name']);
		$this->assertEquals($c['phone'], $c_updated['phone']);
	}

}
