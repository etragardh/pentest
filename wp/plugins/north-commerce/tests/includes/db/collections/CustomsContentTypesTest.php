<?php
/**
 * Autogenerated unit test for collections object. Do not edit.
 */

require_once __DIR__ . '/../North_Commerce_Db_Test_Case.php';

use NorthCommerce\Db\Collections\CustomsContentTypes;

class CustomsContentTypesTest extends North_Commerce_Db_Test_Case {

	public function testMerchandise() {
		$found = $this->ea->get('customs_content_types', [ 'slug' => 'merchandise' ]);
		$c = CustomsContentTypes::merchandise();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testDocuments() {
		$found = $this->ea->get('customs_content_types', [ 'slug' => 'documents' ]);
		$c = CustomsContentTypes::documents();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testGift() {
		$found = $this->ea->get('customs_content_types', [ 'slug' => 'gift' ]);
		$c = CustomsContentTypes::gift();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testReturnedGoods() {
		$found = $this->ea->get('customs_content_types', [ 'slug' => 'returned-goods' ]);
		$c = CustomsContentTypes::returnedGoods();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testSample() {
		$found = $this->ea->get('customs_content_types', [ 'slug' => 'sample' ]);
		$c = CustomsContentTypes::sample();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}


}
