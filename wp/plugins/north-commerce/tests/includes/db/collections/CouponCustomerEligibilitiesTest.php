<?php
/**
 * Autogenerated unit test for collections object. Do not edit.
 */

require_once __DIR__ . '/../North_Commerce_Db_Test_Case.php';

use NorthCommerce\Db\Collections\CouponCustomerEligibilities;

class CouponCustomerEligibilitiesTest extends North_Commerce_Db_Test_Case {

	public function testNewCustomer() {
		$found = $this->ea->get('coupon_customer_eligibilities', [ 'slug' => 'new-customer' ]);
		$c = CouponCustomerEligibilities::newCustomer();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testCustomerEmails() {
		$found = $this->ea->get('coupon_customer_eligibilities', [ 'slug' => 'customer-emails' ]);
		$c = CouponCustomerEligibilities::customerEmails();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testNorthCommerceCustomerIds() {
		$found = $this->ea->get('coupon_customer_eligibilities', [ 'slug' => 'north-commerce-customer-ids' ]);
		$c = CouponCustomerEligibilities::northCommerceCustomerIds();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testNorthCommerceCustomerTags() {
		$found = $this->ea->get('coupon_customer_eligibilities', [ 'slug' => 'north-commerce-customer-tags' ]);
		$c = CouponCustomerEligibilities::northCommerceCustomerTags();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testWordpressUsers() {
		$found = $this->ea->get('coupon_customer_eligibilities', [ 'slug' => 'wordpress-users' ]);
		$c = CouponCustomerEligibilities::wordpressUsers();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}

	public function testWordpressRoles() {
		$found = $this->ea->get('coupon_customer_eligibilities', [ 'slug' => 'wordpress-roles' ]);
		$c = CouponCustomerEligibilities::wordpressRoles();
		$this->assertEquals( $found['id'], $c->id );
		$this->assertEquals( $found['slug'], $c->slug );
	}


}
