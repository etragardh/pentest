<?php
/*
 * A PHP file for testing entity expansion
 */

use NorthCommerce\Testing\EntityFactory;

require_once(__DIR__ . '/../../north-commerce-test-case.php');

class North_Commerce_Db_Expander_Test extends North_Commerce_Db_Test_Case
{
	public function testValidate()
	{
		$expander = North_Commerce_Db_Agent::instance()->expander();

		$table = 'products';
		$tests = [
			'product-type' => true,
			'product-type,product-status' => true,
			'product-type,product-status,customs-detail' => true,
			'customs-detail.content-type,customs-detail.country' => true,
			'product-tags.tag' => true,
			'orders' => false,
			'product-variants.line-items.order.customer' => true,
			'product-variants.x.line-items.order.customer' => false,
			'orders.line-items.product-variants' => false
		];

		foreach($tests as $input => $expected) {
			$result = $expander->validate($table, $input);
			$this->assertEquals($result, $expected, "input=$input");
		}
	}

	public function testExpand()
	{
		$ef = EntityFactory::instance();
		$customer = $ef->newCustomer();
		$order = [];
		for($i = 0; $i < 2; $i++) {
			$order[] = $ef->newOrder(['customer' => $customer]);
		}

		$ea = North_Commerce_Db_Entity_Access::instance();
		$expander = North_Commerce_Db_Agent::instance()->expander();
		$c = $ea->get('customers', ['id' => $customer['id']]);
		$c_expanded = $expander->expand('customers', $c, [
			"orders.line-items.product-variant",
			"orders.billing-address.country"
		]);

		$this->assertEquals($customer['id'], $c_expanded['id']);
		foreach($c_expanded['orders'] as $o) {
			$this->assertEquals($c_expanded['id'], $o['customer_id']);
			$this->assertIsNumeric($o['billing_address']['country']['id']);
			$this->assertIsNumeric($o['line_items'][0]['product_variant']['id']);
		}
	}
}
