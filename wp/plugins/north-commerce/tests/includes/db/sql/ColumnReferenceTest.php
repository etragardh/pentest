<?php
/*
 * A PHP file for testing out column references in SQL
 */
require_once(__DIR__ . '/../../../north-commerce-test-case.php');

use NorthCommerce\Db\Sql\ColumnReference;

class ColumnReferenceTest extends North_Commerce_Db_Test_Case
{

	public function testToSql()
	{
		$tests = [
			['source_table' => 'customers', 'col_expr' => 'id',
			 'expected' => 'customers.id'],

			['source_table' => 'customers', 'col_expr' => 'orders.billing_address.country.id',
			 'expected' => 'countries.id'],

			['source_table' => 'product_variants', 'col_expr' => 'product.sku',
			 'expected' => 'products.sku'],

			['source_table' => 'products', 'col_expr' => 'customer.orders.id',
			 'expected' => false],

			['source_table' => 'customers', 'col_expr' => 'orders',
			 'expected' => false],

			['source_table' => 'products',
			 'col_expr' => 'product_variants.product_variant_option_values.id',
			 'expected' => 'product_variant_option_values.id'],

			['source_table' => 'products',
			 'col_expr' => 'x_:product_variants.product_variant_option_values.id',
			 'expected' => 'x_product_variant_option_values.id']
		];

		foreach($tests as $t) {
			try {
				$cr = new ColumnReference($t['source_table'], $t['col_expr']);
				$this->assertIsString($t['expected']);
			} catch(Exception $ex) {
				$this->assertFalse($t['expected'], $ex->getMessage());
			}
			if($t['expected']) {
				$this->assertEquals($t['expected'], $cr->toSql(), $t['source_table'] . ": " . $t['col_expr']);
			}

		}
	}

	public function testJoins() {
		$tests = [
			['source_table' => 'customers', 'col_expr' => 'addresses.is_default_shipping',
			 'expected' => 'JOIN wp_nc_addresses addresses ON (customers.id = addresses.customer_id)'],

			['source_table' => 'products',
			 'col_expr' => 'product_variants.product_variant_option_values.id',
			 'expected' => ('JOIN wp_nc_product_variants product_variants' .
							' ON (products.id = product_variants.product_id) ' .
							'JOIN wp_nc_product_variant_option_values product_variant_option_values' .
							' ON (product_variants.id = product_variant_option_values.product_variant_id)')],

			['source_table' => 'products',
			 'col_expr' => 'x_:product_variants.product_variant_option_values.id',
			 'expected' => ('JOIN wp_nc_product_variants x_product_variants' .
							' ON (products.id = x_product_variants.product_id) ' .
							'JOIN wp_nc_product_variant_option_values x_product_variant_option_values' .
							' ON (x_product_variants.id = x_product_variant_option_values.product_variant_id)')]
		];

		foreach($tests as $t) {
			$cr = new ColumnReference($t['source_table'], $t['col_expr']);
			$this->assertEquals($t['expected'],
								$cr->joins()->toSql());
		}

	}

}
