<?php
/*
 * A PHP file for testing out PaypalSuccessAutomation
 */

use NorthCommerce\Db\Automations\OrderTransactionUnexpectedStatusException;
use NorthCommerce\Db\Automations\PaypalSuccessAutomation;
use NorthCommerce\Db\Collections\OrderTransactionStatuses;
use NorthCommerce\Db\Collections\PaymentProviders;
use NorthCommerce\Services\PaypalApiException;
use NorthCommerce\Services\PaypalHelper;

require_once(__DIR__ . '/../../../north-commerce-test-case.php');

class PaypalSuccessAutomationTest extends North_Commerce_Test_case
{
	public function testPaymentProvider()
	{
		$psa = new PaypalSuccessAutomation();
		$this->assertEquals(PaymentProviders::paypal()->id, $psa->paymentProvider()->id);
	}

	public function testIsSuccessfulNope()
	{
		$order = $this->makeOrder();
		$psa = new PaypalSuccessAutomation();
		$this->assertFalse($psa->isSuccessful($order['id']));
	}

	public function testIsSuccessChange()
	{
		$psa = new PaypalSuccessAutomation();
		$ot = $this->ef->newOrderTransaction(['provider' => 'paypal']);
		$outcome = $psa->isSuccessChange(
			'order_transactions', $ot,
			['order_transaction_status_id' => OrderTransactionStatuses::successful()->id]);

		$this->assertTrue($outcome);
	}

	public function	testOnEntityAccessUpdateChangesFail()
	{
		$psa = new PaypalSuccessAutomation();
		$ot = $this->ef->newOrderTransaction(['provider' => 'paypal']);
		$this->agent->perspectiveManager()->asPublic(function() use($ot) {
			$this->assertException(function() use($ot) {
				$this->ea->update('order_transactions', $ot, [
					'identity_token' => 'abc',
					'order_transaction_status_id' => OrderTransactionStatuses::successful()->id
				]);
			}, PaypalApiException::class);
		});
	}

	private function makeOrder()
	{
		$ph = new PaypalHelper();
		return $ph->invokeApi([
			'method' => 'POST',
			'path' => 'v2/checkout/orders',
			'body' => [
				'intent' => 'CAPTURE',
				'purchase_units' => [
					['amount' => [
						'value' => 103,
						'currency_code' => 'USD'
					]]
				]
			]
		]);
	}
}
