<?php
/*
 * A PHP file for testing out our string functions
 */
require_once(__DIR__ . '/../../north-commerce-test-case.php');

class North_Commerce_String_Functions_Test extends North_Commerce_Test_Case
{
	public function testNcRandomToken()
	{
		for($i = 0; $i < 100; $i++) {
			$t = nc_random_token(['length' => $i + 1]);
			$this->assertEquals(strlen($t), $i+1);
			$this->assertMatchesRegularExpression("/^[A-Z]+$/", $t);
		}
	}

	public function testNcCamelCase() {
		$tests = [
			'foo' => 'foo',
			'foo_bar' => 'fooBar',
			'foo-bar-baz' => 'fooBarBaz',
			'foo_bar-baz' => 'fooBarBaz'
		];

		foreach($tests as $input => $expected) {
			$this->assertEquals($expected, nc_camel_case($input), $input);
		}
	}

	public function testNcClassCase() {
		$tests = [
			'foo' => 'Foo',
			'foo_bar' => 'FooBar',
			'foo-bar-baz' => 'FooBarBaz',
			'foo_bar-baz' => 'FooBarBaz'
		];

		foreach($tests as $input => $expected) {
			$this->assertEquals($expected, nc_class_case($input), $input);
		}
	}
}
