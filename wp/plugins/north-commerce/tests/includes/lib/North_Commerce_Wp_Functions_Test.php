<?php
/*
 * A PHP file for testing out our wordpress related functions
 */

use NorthCommerce\Testing\EntityFactory;

require_once(__DIR__ . '/../../north-commerce-test-case.php');

class North_Commerce_Wp_Functions_Test extends North_Commerce_Test_Case
{
	public function testNcWpOk()
	{
		$value = nc_wp_ok(100);
		$this->assertEquals($value, 100);

		$token = nc_random_token();
		$error = new WP_Error("error_$token", "Had $token error");
		$this->assertInstanceOf(WP_Error::class, $error);
		$handled = false;
		try {
			nc_wp_ok($error);
			$this->assertTrue(false, "Shouldn't get here");
		} catch(NcWpException $ex) {
			$this->assertEquals($ex->getMessage(), $error->get_error_message());
			$handled = true;
		}
		$this->assertTrue($handled);
	}

	public function testNcWithFilter()
	{
		$count = 0;
		$filter = nc_random_token();
		$callback = function($input) use(&$count) {
			$count++;
			return "@{$input}";
		};

		$input = nc_random_token();
		$this->assertEquals($input, apply_filters($filter, $input));
		$this->assertEquals(0, $count);

		nc_with_filter($filter, $callback,
					   function() use($filter, $input) {
						   $this->assertEquals("@{$input}", apply_filters($filter, $input));
		});

		$this->assertEquals(1, $count);

		$input = nc_random_token();
		$this->assertEquals($input, apply_filters($filter, $input));
		$this->assertEquals(1, $count);
	}

	public function testNcWithCurrentUser() {
		$admin = wp_get_current_user();
		$this->assertGreaterThan(0, $admin->ID);
		$this->assertTrue(current_user_can('publish_pages'));
		$this->assertContains('administrator', $admin->roles);

		$ef = EntityFactory::instance();
		$customer = $ef->newCustomer();
		$user = get_user_by('ID', $customer['wp_user_id']);
		$this->assertGreaterThan(0, $user->ID);
		nc_with_current_user($user, function() use($customer) {
			$user = wp_get_current_user();
			$this->assertFalse(current_user_can('publish_pages'));
			$this->assertNotContains('administrator', $user->roles);
			$this->assertEquals($customer['email'], $user->user_email);
		});

		$after = wp_get_current_user();
		$this->assertEquals($admin->ID, $after->ID);
		$this->assertTrue(current_user_can('publish_pages'));

	}
}
