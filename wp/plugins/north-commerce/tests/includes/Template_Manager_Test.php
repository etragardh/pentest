<?php
/*
 * A PHP file for testing out TemplateManager
 */

use NorthCommerce\Template_Manager;

require_once(__DIR__ . '/../north-commerce-test-case.php');

class Template_Manager_Test extends North_Commerce_Test_case
{

	private Template_Manager $tm;

	public function setUp(): void
	{
		parent::setUp();
		$this->tm = new Template_Manager('tests');
	}

	public function testUse()
	{
		$needle = nc_random_token();
		ob_start();
		$this->tm->use('identity', ['incoming' => $needle]);
		$output = trim(ob_get_clean());
		$this->assertEquals("[[$needle]]", $output);
	}

	public function testUseWithBefore()
	{
		$needle = nc_random_token();
		ob_start();
		nc_with_action('nc_before_tests_identity_template',
					   function() {
						   echo "@@@";
					   }, function() use($needle) {
						   $this->tm->use('identity', ['incoming' => $needle]);
		});
		$output = trim(ob_get_clean());
		$this->assertEquals("@@@[[$needle]]", $output);
	}

	public function testUseWithDelegate()
	{
		$needle = nc_random_token();

		$tm = new Template_Manager('tests', [ NC_TEMPLATE_DELEGATE => $this ]);
		ob_start();
		$tm->use('delegated', ['incoming' => $needle]);
		$output = trim(ob_get_clean());
		$this->assertEquals("[[$needle]][[unit-testing]]", $output);
	}


	public function testUseWithTemplateVars()
	{
		$vars = [];
		for($i = 0; $i < 10; $i++) {
			$vars[nc_random_token()] = nc_random_token();
		}

		$tm = new Template_Manager('tests', [ NC_TEMPLATE_DELEGATE => $this ]);
		ob_start();
		$tm->use('all-vars', $vars);
		$output = trim(ob_get_clean());
		$keys = implode(',', array_keys($vars));
		$values = implode(',', array_values($vars));
		$this->assertStringContainsString($keys, $output);
		$this->assertStringContainsString($values, $output);

	}

	public function generateFiller()
	{
		return "unit-testing";
	}
}
