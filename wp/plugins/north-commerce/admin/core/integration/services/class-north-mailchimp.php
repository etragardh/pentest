<?php

/**
 * Mailchimp integration service
 *
 *
 * @package  north-commerce/admin/core/integrations
 * @link     https://northcommerce.com/
 * @since    0.1.0
 * @version  0.1.4
 */
class North_Commerce_MailChimp implements North_Integration_Connectable {

    public const OPTIONAL_KEY = 'mailchimp_service';

    /**
     * @var    string  $client_id  Mailchimp client id.
     * @since  0.1.0
     */
    private $client_id;

    /**
     * @var    string  $secret_key  Mailchimp secret key.
     * @since  0.1.0
     */
    private $secret_key;

    /**
     * @var     bool    $is_connected  Connection status.
     * @since   0.1.0
     */
    private $is_connected;


	/**
	 * Initialize the class and set its properties.
	 *
	 * @since 0.1.0
	 */
	public function __construct() {
		$arguments = get_option( self::OPTIONAL_KEY, null );
		$this->client_id = $arguments['client_id'] ?? '';
		$this->secret_key = $arguments['secret_key'] ?? '';
		$this->is_connected = $arguments['enabled'] ?? false;
	}

    public function update_options() {
        update_option(self::OPTIONAL_KEY,  array(
            'client_id' => $this->client_id,
            'secret_key' => $this->secret_key,
            'enabled' => $this->is_connected
        ));
    }

    public function get_integration_label() : string {
        return 'MailChimp';
    }

    /**
     * @since   0.1.0
     * @version 0.1.1
     */
    public function get_integration_icon() : string {
        return NORTH_COMMERCE_PLUGIN_DIR_URL . 'admin/images/integration-mailchimp.png';
    }

    function get_integration_description() : string {
        return 'An American marketing automation platform and email marketing service.';
    }

	/**
	 * Mailchimp connect to service.
	 *
	 * @since  0.1.0
	 * @param  array  $args  Mailchimp arguments to connect.
	 */
	public function connect( $args ) : array {
        //TODO: ADD logic to connect

		if ( empty( $args ) || $args['integration_id'] !== self::OPTIONAL_KEY ) {
			return array('is_connected' => false);
		}

        $this->client_id = !empty($args['cliend_id']) ? $args['cliend_id'] : '';
        $this->secret_key = !empty($args['secret_key']) ? $args['secret_key'] : '';
        $this->is_connected = true;

        $this->update_options();
        return array('is_connected' => true);
    }

	/**
	 * Disconnect from Mailchimp service.
	 *
	 * @since 0.1.0
	 */
	public function disconnect() : bool {
        $this->is_connected = false;
        $this->update_options();
        return true;
    }

	/**
	 * Mailchimp disconnect from service.
	 *
	 * @since 0.1.0
	 */
    public function is_connected() : bool {
        return $this->is_connected;
    }

	/**
	 * @since 0.1.4
	 */
	public function has_keys() : bool {
		return $this->client_id && $this->secret_key;
	}

    /**
     * Get form field fot integration tab
     */
    public function get_form_fields() : string {
        $fields = '<input type="hidden" name="integration_id" value="' . self::OPTIONAL_KEY .'" >';
        $fields .= '<div class="admin-popup-field">';
        $fields .= '<label for="cliend_id">' . esc_html__( 'Client ID', 'north-commerce' ) . '</label>';
        $fields .= '<input type="text" name="cliend_id" value="' . $this->client_id . '" class="cliend_id"></div>';
        $fields .= '<div class="admin-popup-field">';
        $fields .= '<label for="secret_key">' . esc_html__( 'Secret Key', 'north-commerce' ) . '</label>';
        $fields .= '<input type="password" name="secret_key" value="' . $this->secret_key .'" class="secret_key"></div>';

        return $fields;
    }

}
