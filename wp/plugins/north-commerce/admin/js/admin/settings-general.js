/**
 * General Settings
 *
 * @since 0.1.19
 */
export class SettingsGeneral {
    constructor() {
        this.setupColorPickerInputs()
        this.setupFileUploadEvent()
    }

	setupColorPickerInputs() {
		const colorInputs = jQuery('.selector__colors .color-picker')

      if (
            ! colorInputs.length
            || ! colorInputs.wpColorPicker
        ) {
			return
		}

		colorInputs.wpColorPicker()
	}

	setupFileUploadEvent() {
		const fileSelectors = document.querySelectorAll('.setting-field.icon-selector')

		if (!fileSelectors.length) {
			return
		}

        fileSelectors.forEach((selector) => {
            selector.addEventListener('change', this.handleFileSelection.bind(this))
        })

		document.addEventListener('click', this.handleFileUpload.bind(this))
    }

	isFileValid(fileName, allowedExt) {
        return allowedExt.some((ext) => fileName.endsWith(`.${ext}`))
    }

    handleFileSelection(e) {
        if ('add-cart-svg' === e.target.name) {
            return this.handleCartIconSelection(e)
        }

        if ('add-company-logo' === e.target.name) {
            return this.handleCompanyLogoSelection(e)
        }
    }

    handleCartIconSelection(e) {
        e.currentTarget.querySelector('.uploader__error').textContent = ''
        const nameContainer = e.currentTarget.querySelector('.uploader__name')
        const svgUploader = e.target.closest('.image-uploader')
        const button = svgUploader.querySelector('.uploader__submit')

        nameContainer.classList.remove('error')
        svgUploader.classList.add('active')

        const svgFileName = e.target.files[0].name
        if (svgFileName.endsWith('.svg')) {
            nameContainer.textContent = e.target.files[0].name
            button.classList.remove('hidden')
            return
        }

        e.target.value = ''
        nameContainer.classList.add('error')
        nameContainer.textContent = 'Only SVG files are supported'
        button.classList.add('hidden')
    }

    handleCompanyLogoSelection(e) {
        e.currentTarget.querySelector('.uploader__error').textContent = ''
        const nameContainer = e.currentTarget.querySelector('.uploader__name')
        const imageUploader = e.target.closest('.image-uploader')
        const button = imageUploader.querySelector('.uploader__submit')
        const allowedExt = [ 'jpg', 'jpeg', 'png','webp', 'gif' ]

        nameContainer.classList.remove('error')
        imageUploader.classList.add('active')

        const imageFileName = e.target.files[0].name
        if (this.isFileValid(imageFileName, allowedExt)) {
            nameContainer.textContent = e.target.files[0].name
            button.classList.remove('hidden')
            return
        }

        e.target.value = ''
        nameContainer.classList.add('error')
        nameContainer.textContent = `Allowed extensions: ${ allowedExt.join(', ') }`
        button.classList.add('hidden')
    }

    handleFileUpload(e) {
        if ( !e.target.classList.contains('uploader__submit') ) {
            return
        }

        if ('cart' === e.target.dataset.type) {
            this.handleCartIconUpload(e)
        }

        if ('logo' === e.target.dataset.type) {
            this.handleLogoImageUpload(e)
        }

        if ('logo-delete' === e.target.dataset.type) {
            this.handleLogoImageDelete(e)
        }
    }

    handleCartIconUpload(e) {
        e.preventDefault()

        const button = e.target
        button.classList.add('disable')
        button.textContent = 'Uploading...'

        const wrapper = e.target.parentElement
        const input = wrapper.querySelector('input[type="file"]')
        const nonce = wrapper.querySelector('#svg_uploader_nonce').value

        const data = new FormData()
        data.append( 'action', 'upload_cart_icon_svg' );
        data.append( 'icon', input.files[0] );
        data.append( 'security', nonce );

        fetch(ajaxurl, {
            method: 'POST',
            body: data
        })
            .then((response) => response.json())
            .then((data) => {
                const uploaderError = wrapper.querySelector('.uploader__error')
                uploaderError.textContent = ''

                wrapper.querySelector('.uploader__name').textContent = ''
                button.classList.remove('disable')
                button.textContent = 'Upload file'
                button.classList.add('hidden')
                input.value = ''

                if (!data.success) {
                    uploaderError.textContent = data.data
                    return
                }

                const optionsContainer = wrapper.closest('.selector__options')
                optionsContainer.insertAdjacentHTML('beforeend', data.data)
            })
            .catch((error) => console.error(error))
    }

    handleLogoImageUpload(e) {
        e.preventDefault()

        const button = e.target
        button.classList.add('disable')
        button.textContent = 'Uploading...'

        const wrapper = e.target.parentElement
        const input = wrapper.querySelector('input[type="file"]')
        const nonce = wrapper.querySelector('#logo_uploader_nonce').value

        const data = new FormData()
        data.append( 'action', 'upload_company_logo_image' );
        data.append( 'image', input.files[0] );
        data.append( 'security', nonce );

        fetch(ajaxurl, {
            method: 'POST',
            body: data
        })
            .then((response) => response.json())
            .then((data) => {
                const uploaderError = wrapper.querySelector('.uploader__error')
                uploaderError.textContent = ''

                wrapper.querySelector('.uploader__name').textContent = ''
                button.classList.remove('disable')
                button.textContent = 'Upload file'
                button.classList.add('hidden')
                input.value = ''



                if (!data.success) {
                    uploaderError.textContent = data.data
                    return
                }

                window.location.reload();

                /*const optionsContainer = wrapper.closest('.selector__options')
                optionsContainer.insertAdjacentHTML('beforeend', data.data)*/
            })
            .catch((error) => console.error(error))
    }


    handleLogoImageDelete(e) {
        e.preventDefault()

        const button = e.target
        button.classList.add('disable')
        button.textContent = 'Uploading...'

        const wrapper = e.target.parentElement
        const nonce = wrapper.querySelector('#logo_uploader_nonce').value

        const data = new FormData()
        data.append( 'action', 'delete_company_logo_image' );
        data.append( 'security', nonce );

        fetch(ajaxurl, {
            method: 'POST',
            body: data
        })
            .then((response) => response.json())
            .then((data) => {
                const uploaderError = wrapper.querySelector('.uploader__error')
                uploaderError.textContent = ''

                wrapper.querySelector('.uploader__name').textContent = ''
                button.classList.remove('disable')
                button.textContent = 'Delete file'
                button.classList.add('hidden')

                if (!data.success) {
                    uploaderError.textContent = data.data
                    return
                }

                window.location.reload();

                /*document.querySelectorAll('.selector__options img').style.display = 'none';
                document.querySelectorAll('.selector__options label').style.display = 'none';
                document.querySelectorAll('.selector__options button').style.display = 'none';
                const optionsContainer = wrapper.closest('.selector__options')
                optionsContainer.insertAdjacentHTML('beforeend', `
                    <label class="icon-option" for="add-company-logo">
                        <span>Upload an image</span>
                    </label>
                `)*/



            })
            .catch((error) => console.error(error))
    }

}
