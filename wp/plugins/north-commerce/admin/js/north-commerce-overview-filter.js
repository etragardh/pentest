(function( $ ) {
    'use strict';

    $(document).ready(function(){   
        if (document.querySelector('.overview-tab__filter') !== null) {

            const currentDay = moment(new Date);
            let startFromDate, endFromDate, startToDate, endToDate;


            let filterLabel = $('.overview-tab__search span');
            let filterToggle = $('.overview-tab__search');
            let compareToggle = $('#overview-compare-include');
            let cancelButton = $('.overview-form-cancel');
            let dateRangeType = $('#overview-date-type');
            let compareRangeType = $('#overview-compare-type');
            
            let overviewCardsContainer = $('.overview-tab__info');
            let filterFormContainer = $('.overview-form');
            let filterLoadingAnimation = $('.filter-loader.load-more__loader');
            let compareFormContainer = $('.overview-form__compare-container');
            let rangeFromContainer = $('.overview-form__from-range');
            let compareFromContainer = $('.overview-form__to-range');

            let datePickerFrom = $('.overview-date-range-from');
            let datePickerCompare = $('.overview-date-range-compare');

            
            setupInitialFormValues();

            setupDatePickerConfig(
                datePickerFrom,
                '.overview-date-range-from-wrapper',
                (s, s1, s2) => {
                    startFromDate = s1;
                    endFromDate = s2;
                     $('.overview-date-range-from-first').val(startFromDate);
                     $('.overview-date-range-from-second').val(endFromDate);
                     filterLabel.text(s1 + ' - ' + s2);
                }
            );

            setupDatePickerConfig(
                datePickerCompare,
                '.overview-date-range-to-wrapper',
                (s, s1, s2) => {
                    startToDate = s1;
                    endToDate = s2;

                    $('.overview-date-range-to-first').val(startToDate);
                    $('.overview-date-range-to-second').val(endToDate);
                }
            );


            $(filterToggle).on('click', function(e){
                e.preventDefault();
                if($(filterToggle).hasClass('active')){
                    hideContentBlock();
                    return;
                }
                showFormContainer();
            });

            $(cancelButton).on('click', function(e){
                e.preventDefault();
                hideContentBlock();
            });


            $('.overview-date-range-from-first, .overview-date-range-from-second').focusout(function(){
                setDateValues($('.overview-date-range-from-first'), $('.overview-date-range-from-second'), datePickerFrom);
            });

            $('.overview-date-range-to-first, .overview-date-range-to-second').focusout(function(){
                setDateValues($('.overview-date-range-to-first'), $('.overview-date-range-to-second'), datePickerCompare);
            });

            /**
            * Filter overiew
            */
            $(filterFormContainer).on('submit', function(e){
                e.preventDefault();
                let filterArguments = {
                    'startFromDate': currentDay.format('MM/DD/YYYY')
                };
                
                if($(dateRangeType).children("option:selected").val() == 'Range'){
                    filterArguments['startFromDate'] = isEmpty(startFromDate) ? filterArguments['startFromDate'] : startFromDate;
                    filterArguments['endFromDate'] = isEmpty(endFromDate) ? filterArguments['startFromDate'] : endFromDate;
                }

                if($(compareToggle).is(':checked')){
                    filterArguments['startToDate'] = currentDay.format('MM/DD/YYYY');
                    if($(compareRangeType).children("option:selected").val() == 'Range'){
                        filterArguments['startToDate'] = isEmpty(startToDate) ?  filterArguments['startToDate'] : startToDate;
                        filterArguments['endToDate'] = isEmpty(endToDate) ?  filterArguments['startToDate'] : endToDate;
                    }
                }

                $.ajax({
                    type: 'POST',
                    url: ajax_object.ajaxurl,
                    data: {
                        'action': 'get_overview_info',
                        'filter':  filterArguments,
                        'filterType': dateRangeType.val()
                    },
                    beforeSend: function() {
                        hideContentBlock();
                        filterLoadingAnimation.show();
                    },
                    success: function (data) {
                        filterLoadingAnimation.hide();
                        overviewCardsContainer.html(data);
                    }
                 });
            });

            $(compareToggle).on('change', function(){
                if($(this).is(":checked")){
                    showCompareFormContainer();
                    return;
                }
                hideCompareFormContainer();
            });

            $(dateRangeType).on('change', function(){
                if($(this).children("option:selected").val() == 'Range'){
                    showFromRangeContainer();
                    return;
                }
                hideFromRangeContainer();
            });

            $(compareRangeType).on('change', function(){
                if($(this).children("option:selected").val() == 'Range'){
                    showCompareRangeContainer();
                    return;
                }
                hideCompareRangeContainer();
            });

            function setupInitialFormValues(){
                if($(compareToggle).is(":checked"))
                    showCompareFormContainer();

                if($(dateRangeType).children("option:selected").val() == 'Range')
                    showFromRangeContainer();

                if($(compareRangeType).children("option:selected").val() == 'Range')
                    showCompareRangeContainer();
            }

            function setupDatePickerConfig(datePicker, container, setValue){
                datePicker.dateRangePicker(
                    {
                        alwaysOpen: true,
                        container: container,
                        inline: true,
                        separator : ' to ',
                        format: 'MM/DD/YYYY',
                        startOfWeek: 'monday',
                        stickyMonths: true,
                        showTopbar: false,
                        setValue: setValue,
                        endDate: currentDay.format('MM-DD-YYYY'),
                    }
                );
            }

            function isEmpty(str){
                return (!str || str.length === 0 );
            }

            function setDateValues(start, end, input){
                let parsedFirstDate = moment($(start).val(), ['MM/DD/YYYY', 'DD.MM.YYYY']);
                let parsedSecondDate = moment($(end).val(), ['MM/DD/YYYY', 'DD.MM.YYYY']);

                parsedFirstDate = parsedFirstDate.isValid() && parsedFirstDate.isBefore(currentDay) ? parsedFirstDate : currentDay;
                parsedSecondDate = parsedSecondDate.isValid() && parsedFirstDate.isBefore(currentDay) ? parsedSecondDate : parsedFirstDate;

                if(parsedFirstDate.isAfter(parsedSecondDate)){
                    var temp = parsedFirstDate;
                    parsedFirstDate = parsedSecondDate;
                    parsedSecondDate = temp;
                }

                $(start).val(parsedFirstDate.format('MM/DD/YYYY'));
                $(end).val(parsedSecondDate.format('MM/DD/YYYY'));
                $(input).data('dateRangePicker').setDateRange(parsedFirstDate.format('MM/DD/YYYY'), parsedSecondDate.format('MM/DD/YYYY'));
            }

            function showFormContainer(){
                filterFormContainer.show("fast");
                filterToggle.addClass('active');
            }

            function showCompareFormContainer(){
                compareFormContainer.show("fast");
            }

            function showFromRangeContainer(){
                if(!rangeFromContainer.hasClass('active')){
                    rangeFromContainer.show('fast');
                    rangeFromContainer.addClass('active');
                }
            }

            function showCompareRangeContainer(){
                if(!compareFromContainer.hasClass('active')){
                    compareFromContainer.show('fast');
                    compareFromContainer.addClass('active');
                }
            }

            function hideContentBlock(){
                filterFormContainer.hide("fast");
                filterToggle.removeClass('active');
            }

            function hideCompareFormContainer(){
                compareFormContainer.hide('fast');
            }

            function hideFromRangeContainer(){
                if(rangeFromContainer.hasClass('active')){
                    rangeFromContainer.hide('fast');
                    rangeFromContainer.removeClass('active');
                }
            }

            function hideCompareRangeContainer(){
                if(compareFromContainer.hasClass('active')){
                    compareFromContainer.hide('fast');
                    compareFromContainer.removeClass('active');
                }
            }
        }
    });

})( jQuery );