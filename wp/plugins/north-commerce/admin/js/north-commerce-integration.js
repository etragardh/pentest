(function( $ ) {
	'use strict';

	$(document).ready(function(){

        const form = $('.service-integration-popup')
        let formIntegrationImg = $('.admin-popup__left-side img')
        let formIntegrationName = $('.integration-popup-name')
        let formIntegrationContent = form.find('.admin-popup__content')
        let formIntegrationNotice = form.find('.admin-popup__notice')
        let formIntegrationLoader = $('.admin-popup__left-side .loader')
        let formIntegrationCloseBtn = $('.admin-popup__close')
        let formIntegrationCancelBtn = $('.admin-popup-cancel')
        const formRemoveIntegrationButton = $('.action__clear-integraion')
        let formIntegrationSubmit = $('.integration-submit')
        var isOpenPopup = false

        const integrationTab = document.querySelector('#integration-tab')
        if (integrationTab) {
            integrationTab.addEventListener('click', (e) => {
                if (
                    !e.target.classList.contains('switch-service')
                    && null === e.target.closest('.switch-service')
                ) {
                    return
                }

                e.preventDefault()

                const service = e.target.closest('.service-item')

                if (e.target.checked) {
                    return showIntegrationPopup( jQuery(service) )
                }

                disableIntegration( jQuery(service) )
            })
        }

        formRemoveIntegrationButton.on('click', function(e) {
            e.preventDefault()
            const id = form.find('[name="integration_id"]').val()
            disableIntegration( $(`[data-integration_id="${id}"]`) )
        })

        document.addEventListener('click', (e) => {
            if (
                !e.target.classList.contains('switch-service-mode')
                && null === e.target.closest('.switch-service-mode')
            ) {
                return
            }

            e.preventDefault()

            const checkbox = e.target

            if (!checkbox.dataset.mode) {
                return
            }

            checkbox.disabled = true
            checkbox.style.visibility = 'hidden'

            toggleActiveMode(checkbox.name, checkbox.dataset.mode)
        })

        $('.service-integration-popup .admin-popup__close, .service-integration-popup .admin-popup-cancel').on('click', function() {
            isOpenPopup = false;
            $.fancybox.close();
        });

		$('.service-setting').on('click', function(e) {
			e.preventDefault();
            showIntegrationPopup( $(this).closest('.service-item'), 'Save', 'setting' );
		});

        $('.integration-submit').on('click', function(e) {
			e.preventDefault();
            enableIntegration();
		})

        function showIntegrationPopup(serviceItem, submitText = 'Connect', actionType = 'connect' ) {
            if (isOpenPopup) {
                return;
            }

            isOpenPopup = true;

            const integrationName = serviceItem.find('.service-item__body h3').text()
            const integrationID = serviceItem.data('integration_id');
            const isMode = serviceItem.data('service-mode');
            const loader = $('.service-item[data-integration_id="' + integrationID + '"] .loader')

            formIntegrationImg.attr('src', serviceItem.find('.service-item__img img').attr('src'));
            formIntegrationName.text(integrationName + ' Settings');
            formIntegrationSubmit.val(submitText);
            formIntegrationNotice.html('');

            if (isMode && serviceItem[0].querySelector(`#${integrationID}`).classList.contains('switch-service-mode')) {
                formRemoveIntegrationButton.css('display', 'inline')
                formRemoveIntegrationButton.find('span').html(integrationName)
            } else {
                formRemoveIntegrationButton.css('display', 'none')
            }

            loader.css('display', 'block');

            // GET FORM FIELDS
            $.ajax({
				type: 'POST',
				url: ajax_object.ajaxurl,
				data: {
					'action': 'get_integration_form_fields',
					'data': integrationID
                },
				success: function (data) {
                    if (data !== null && data !== undefined) {
                        try {
                            formIntegrationContent.html(data);
                            form.trigger('integration-form-updated');
                        } catch(e) {
                            formIntegrationNotice.html('<div class="north-error">' + e + '</div>');
                        }
                    }

                    loader.css('display', 'none');

                    $.fancybox.open({
                        src : form,
                        type : 'inline',
                        opts : {
                            modal: true,
                            infobar: false,
                            toolbar: false,
                            arrows: false,
                        },
                    });
				}
			});
        }

        function toggleActiveMode(serviceId, status) {
            const data = {
                'integration_id' : serviceId,
                'status' : status
            }

            const loader = $(`.service-item[data-integration_id="${serviceId}"] .loader`)
            loader.css('display', 'block')

            $.ajax({
				type: 'POST',
				url: ajax_object.ajaxurl,
				data: {
					'action': 'toggle_integration',
					'data': data,
				},
				success: function (data) {
                    const serviceItem = $(`.service-item[data-integration_id="${serviceId.trim()}"]`)
                    const response = JSON.parse(data)
                    const checkbox = serviceItem.find('.switch-service-mode')

                    if (response && response !== 'error') {
                        const label = serviceItem.find('.service-mode-label')
                        let labelText
                        if ('live' === response.active_mode) {
                            checkbox.attr('data-mode', 'live');
                            checkbox.prop('checked', true);
                            labelText = label.data('label-live') ? label.data('label-live') : 'Live';
                            label.attr('data-service-mode', 'live');
                        } else {
                            checkbox.attr('data-mode', 'test');
                            checkbox.prop('checked', false);
                            labelText = label.data('label-test') ? label.data('label-test') : 'Test';
                            label.attr('data-service-mode', 'test');
                        }
                        label.html(labelText)
                    }

                    checkbox.attr('disabled', false)
                    checkbox.css('visibility', 'visible')
                    loader.css('display', 'none')
				}
			})
        }

        function enableIntegration() {
            let data = form.serialize();
            formIntegrationLoader.css('display', 'block');

            disablePopupActions();
            $.ajax({
				type: 'POST',
				url: ajax_object.ajaxurl,
				data: {
					'action': 'enable_integration',
					'data': data,
				},
				success: function (data) {
                    const response = JSON.parse(data)

                    if (!response || response === 'error') {
                        return
                    }

                    try {
                        const serviceID = $('input[name="integration_id"]').val()
                        const serviceItem = $(`[data-integration_id="${serviceID}"`)
                        const checkbox = document.querySelector(`#${serviceID}`)

                        if (response.is_connected) {

                            if (response.active_mode) {

                                checkbox.dataset.mode = response.active_mode

                                const label = serviceItem.find('.service-mode-label')
                                label.removeClass('hidden-label')

                                let labelText
                                if ('live' === response.active_mode) {
                                    checkbox.checked = true
                                    labelText = label.data('label-live') ? label.data('label-live') : 'Live'
                                    label.attr('data-service-mode', 'live')
                                }
                                if ('test' === response.active_mode) {
                                    labelText = label.data('label-test') ? label.data('label-test') : 'Test'
                                    label.attr('data-service-mode', 'test')
                                }
                                label.html(labelText)

                                if (checkbox.classList.contains('switch-service')) {
                                    checkbox.classList.remove('switch-service')
                                    checkbox.classList.add('switch-service-mode')
                                    document.querySelector(`label[for="${serviceID}"]`).classList.add('switch-service-label__mode')
                                }

                            } else {
                                checkbox.checked = true
                            }

                        }

                        const notices = response['errors']
                        if (notices === undefined || !notices.length) {
                            isOpenPopup = false;
                            $.fancybox.close()
                        } else {
                            let html = '';
                            for (var i = 0; i < notices.length; i++) {
                                html += `<div class="north-error">${notices[i]}</div>`
                            }
                            formIntegrationNotice.html(html)
                        }
                    } catch(e) {
                        formIntegrationNotice.html(`<div class="north-error">${e}</div>`);
                    } finally {
                        formIntegrationLoader.css('display', 'none')
                        enablePopupActions()
                    }
				}
			})
        }

        function disableIntegration(serviceItem) {
            const service = serviceItem.data('integration_id');
            formIntegrationLoader.css('display', 'block');
            disablePopupActions();

            const loader = $(`.service-item[data-integration_id="${service}"] .loader`)
            loader.css('display', 'block');

            $.ajax({
				type: 'POST',
				url: ajax_object.ajaxurl,
				data: {
					'action': 'disable_integration',
					'data': service,
				},
				success: function (data) {
                    if (!data) {
                        formIntegrationLoader.css('display', 'none')
                        enablePopupActions()
                        return
                    }

                    const checkbox = serviceItem.find(`#${service}`)
                    checkbox.prop('checked', false);
                    checkbox.removeClass('switch-service-mode')
                    checkbox.addClass('switch-service')
                    checkbox.attr('data-mode', '')

                    serviceItem.find(`label[for="${service}"]`).removeClass('switch-service-label__mode');
                    serviceItem.find(`.service-mode-label`).addClass('hidden-label')

                    loader.css('display', 'none');

                    isOpenPopup = false;
                    $.fancybox.close();
				}
			})
        }


        function disablePopupActions() {
            formIntegrationCancelBtn.css('pointer-events', 'none')
            formRemoveIntegrationButton.css('pointer-events', 'none')
            formIntegrationSubmit.css('pointer-events', 'none')
            formIntegrationCloseBtn.css('pointer-events', 'none')
        }

        function enablePopupActions() {
            formIntegrationCancelBtn.css('pointer-events', 'auto')
            formRemoveIntegrationButton.css('pointer-events', 'auto')
            formIntegrationSubmit.css('pointer-events', 'auto')
            formIntegrationCloseBtn.css('pointer-events', 'auto')
        }

        jQuery('.service-item__actions a.action-button').on('click', function(e) {
            if (!e.target.classList.contains('install-now')) {
                // Bailout.
                return
            }

            e.preventDefault();
            const btn = e.target

            jQuery.ajax({
                type: 'POST',
                url: btn.href,
                beforeSend: function () {
                    btn.classList.add('installing')
                    btn.textContent = btn.dataset.textInstalling
                    btn.disabled = true
                },
                success: function (response) {
                    if (!response.success) {
                        btn.classList.remove('installing')
                        btn.textContent = btn.dataset.textIdle
                        btn.disabled = false
                    } else if (response.data && response.data.activateUrl) {
                        btn.classList.remove('installing')
                        btn.classList.remove('install-now')
                        btn.classList.add('activate-now')
                        btn.textContent = btn.dataset.textActivate
                        btn.href = response.data.activateUrl
                        btn.disabled = false
                    }

                },
            });
        })

        if (window.location.search.includes('stripe-connect')) {
            showIntegrationPopup( jQuery('.service-item[data-integration_id="stripe_service"]'), 'Save', 'setting' );
        }

    });

})( jQuery );