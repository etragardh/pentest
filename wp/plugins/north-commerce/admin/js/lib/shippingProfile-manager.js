/**
 * A JS file for implementing a Easy Post Manager - that is an object
 * that helps the create shipping labels for orders
 */
(function() {
    if(!window.NorthCommerce) {
        window.NorthCommerce = {};
    }

    const baseUrl = `${window.location.protocol}//${window.location.hostname}`;

    // Shipment Input fields



    window.NorthCommerce.ShippingProfile = {
        // Localise shipment address fields


        getCountrySubunits: function(countryCode, addressType) {
                const countriesSubunitsMap = JSON.parse(document.querySelector('#list_states_by_countries').value);
                const shippingProfileAddress1 = document.querySelector(`.shipping-profile-${addressType}-address1`);
                const shippingProfileCity = document.querySelector(`.shipping-profile-${addressType}-city`);
                const shippingProfileState = document.querySelector(`.shipping-profile-${addressType}-state`);
                const shippingProfileZipCode = document.querySelector(`.shipping-profile-${addressType}-zipcode`);

                let selectedCountry = countriesSubunitsMap[countryCode];
                shippingProfileState.innerText = selectedCountry.name.single;
                shippingProfileZipCode.innerText = selectedCountry.labels.zip;
                window.NorthCommerce.ShippingProfile.localizeShipmentAddressFields(selectedCountry, addressType)
        },


        localizeShipmentAddressFields: function(selectedCountry, addressType) {
            const shipmentFieldInputs = [
                `address-${addressType}`
                , `city-${addressType}`
                , `state-${addressType}`
                , `zipcode-${addressType}`
            ]

            // Has states, city & zip/postal code
            if (
                selectedCountry
                && selectedCountry.labels.states
                && selectedCountry.labels.zip
            ) {
                shipmentFieldInputs.forEach((field) => {
                    const shipmentInputs = document.querySelector(`[data-shipment-${field}-container]`)

                    if (
                        field === `state-${addressType}`
                        || field === `zipcode-${addressType}`
                    ) {
                        shipmentInputs.classList.remove('nc-input-field--full')
                        shipmentInputs.classList.add('admin-popup-field-new--half')
                    } else {
                        shipmentInputs.classList.remove('admin-popup-field-new--half')
                        shipmentInputs.classList.add('nc-input-field--full')
                    }
                })
            }

            // Has states, city but no zip/postal code
            if (
                selectedCountry.labels.states
                && !selectedCountry.labels.zip
                && selectedCountry.labels.city
            ) {
                shipmentFieldInputs.forEach(field => {
                    const shipmentInputs = document.querySelector(`[data-shipment-${field}-container]`);
                    if(field === `zipcode-${addressType}`) {
                        shipmentInputs.style.display = 'none';
                    } else {
                        shipmentInputs.style.display = 'flex';
                        shipmentInputs.style.width = '100%';
                        shipmentInputs.classList.remove('admin-popup-field-new--half');
                        shipmentInputs.classList.add('nc-input-field--full');
                    }
                })
            }

            // Has city but no states & zip/postal code
            if (
                !selectedCountry.labels.states
                && !selectedCountry.labels.zip
                && selectedCountry.labels.city
            ) {
                shipmentFieldInputs.forEach(field => {
                    const shipmentInputs = document.querySelector(`[data-shipment-${field}-container]`);
                    if (
                        field === `zipcode-${addressType}`
                        || field === `state-${addressType}`
                    ) {
                        shipmentInputs.style.display = 'none';
                    } else {
                        shipmentInputs.style.display = 'flex';
                        shipmentInputs.classList.remove('admin-popup-field-new--half');
                        shipmentInputs.classList.add('nc-input-field--full');
                    }
                })
            }

            // Has city, zip but no states
            if (
                !selectedCountry.labels.states
                && selectedCountry.labels.zip
                && selectedCountry.labels.city
            ) {
                shipmentFieldInputs.forEach(field => {
                    const shipmentInputs = document.querySelector(`[data-shipment-${field}-container]`);
                    if(field === `state-${addressType}`) {
                        shipmentInputs.style.display = 'none';
                    } else {
                        shipmentInputs.style.display = 'flex';
                        shipmentInputs.style.width = '100%';
                        shipmentInputs.classList.remove('north-commerce_page_north-commerce-settings');
                        shipmentInputs.classList.remove('admin-popup-field-new__group');
                        shipmentInputs.classList.remove('admin-popup-field-new--half');
                        shipmentInputs.classList.add('nc-input-field--full');
                    }
                })
            }

            // Has no city, zip or states e.g probs only the vatican
            if (
                !selectedCountry.labels.states
                && !selectedCountry.labels.zip
                && !selectedCountry.labels.city
            ) {
                shipmentFieldInputs.forEach(field => {
                    const shipmentInputs = document.querySelector(`[data-shipment-${field}-container]`);
                    if (
                        field === `city-${addressType}`
                        || field === `state-${addressType}`
                        || field === `zipcode-${addressType}`
                    ) {
                        shipmentInputs.style.display = 'none';
                    }
                })
            }
       }

}


})();
