/**
 * Options Manager for Product Single
 *
 * @version 0.1.24
 */
(function() {

    window.NorthCommerce = window.NorthCommerce ?? {}

    window.NorthCommerce.OptionManager = {

        currentOptions: function () {
            const optionElts = document.querySelectorAll('.options__list .option')
            return Array.from(optionElts)
                .map((el) => {
                    const typeSlug = el.querySelector('.option-select-type').value
                    const typeId = el.querySelector(`.option-select-type option[value="${typeSlug}"]`).dataset.id

                    const option = {
                        id: el.dataset.id,
                        name: el.querySelector('.option-name').value.trim(),
                        product_option_type_id: typeId,
                        product_option_type_slug: typeSlug
                    }

                    const values = this.currentValues(option, el)

                    option.product_option_values = values
                    return option
                })
        },

        currentValues(option, optionEl) {
            let sequence = 0

            return Array
                .from(optionEl.querySelectorAll('.option__values .option-value.active'))
                .map((el) => {
                    const display_value = el.querySelector('.value-name').value
                    const value = option.product_option_type_slug == 'color'
                        ? el.querySelector('.value-color').value
                        : display_value

                    const weight = el.querySelector('.weight').value
                    const additionalPrice = el.querySelector('.additional-price-value').value

                    return {
                        id: el.dataset.id,
                        sequence: ++sequence,
                        value,
                        display_value,
                        weight: weight ? parseFloat(weight) : null,
                        price_offset: additionalPrice ? parseFloat(additionalPrice) : 0,
                        is_price_offset_percent: el.querySelector('.additional-price-type').value == 'percent'
                    }
                })
        }

    }

})()
