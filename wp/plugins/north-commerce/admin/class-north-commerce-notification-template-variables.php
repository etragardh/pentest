<?php

defined( 'ABSPATH' ) || exit;

use North_Commerce_Settings as Settings;
use NorthCommerce\Models\CouponModel;

define('VAR_LABEL_FULL_NAME', esc_html__( 'Full name', 'north-commerce' ));
define('VAR_LABEL_FIRST_NAME', esc_html__( 'First name', 'north-commerce' ));
define('VAR_LABEL_LAST_NAME', esc_html__( 'Last name', 'north-commerce' ));
define('VAR_LABEL_EMAIL', esc_html__( 'Email', 'north-commerce' ));
define('VAR_LABEL_COMPANY_NAME', esc_html__( 'Company Name', 'north-commerce' ));
define('VAR_LABEL_COMPANY_LOGO', esc_html__( 'Company Logo', 'north-commerce' ));
define('VAR_LABEL_PHONE_NUMBER', esc_html__( 'Phone Number', 'north-commerce' ));
define('VAR_LABEL_LINE_ITEM_IMAGE', esc_html__( 'Line Item Image', 'north-commerce' ));
define('VAR_LABEL_LINE_ITEM_DESCRIPTION', esc_html__( 'Line Item Description', 'north-commerce' ));
define('VAR_LABEL_LINE_ITEM_QUANTITY', esc_html__( 'Line Item Quantity', 'north-commerce' ));
define('VAR_LABEL_LINE_ITEM_AMOUNT', esc_html__( 'Line Item Amount', 'north-commerce' ));
define('VAR_LABEL_LINE_ITEM_PERMALINK', esc_html__( 'Line Item permalink', 'north-commerce' ));
define('VAR_LABEL_LINE_ITEM_OPTION_NAME', esc_html__( 'Line Item Option Name', 'north-commerce' ));
define('VAR_LABEL_LINE_ITEM_OPTION_VALUE', esc_html__( 'Line Item Option Value', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_ADDRESS', esc_html__( 'Shipping Address', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_ADDRESS_LINE_1', esc_html__( 'Shipping Address Line 1', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_ADDRESS_LINE_2', esc_html__( 'Shipping Address Line 2', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_CITY', esc_html__( 'Shipping City', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_ZIP', esc_html__( 'Shipping Zip', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_STATE', esc_html__( 'Shipping State', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_COUNTRY', esc_html__( 'Shipping Country', 'north-commerce' ));
define('VAR_LABEL_BILLING_ADDRESS', esc_html__( 'Billing Address', 'north-commerce' ));
define('VAR_LABEL_BILLING_CITY', esc_html__( 'Billing City', 'north-commerce' ));
define('VAR_LABEL_BILLING_ZIP', esc_html__( 'Billing Zip', 'north-commerce' ));
define('VAR_LABEL_BILLING_STATE', esc_html__( 'Billing State', 'north-commerce' ));
define('VAR_LABEL_BILLING_COUNTRY', esc_html__( 'Billing Country', 'north-commerce' ));
define('VAR_LABEL_ORDER_ID', esc_html__( 'Order ID', 'north-commerce' ));
define('VAR_LABEL_ORDER_N', esc_html__( 'Order #', 'north-commerce' ));
define('VAR_LABEL_ORDER_DATE', esc_html__( 'Order Date', 'north-commerce' ));
define('VAR_LABEL_PAYMENT_CARD_BRAND', esc_html__( 'Payment Card Brand', 'north-commerce' ));
define('VAR_LABEL_PAYMENT_METHOD', esc_html__( 'Payment Method', 'north-commerce' ));
define('VAR_LABEL_SHIPMENT_TRACKING_N', esc_html__( 'Shipment Tracking #', 'north-commerce' ));
define('VAR_LABEL_CARRIER_NAME', esc_html__( 'Carrier Name', 'north-commerce' ));
define('VAR_LABEL_ESTIMATED_DELIVERY_DATE', esc_html__( 'Estimated Delivery Date', 'north-commerce' ));
define('VAR_LABEL_ORDER_SUBTOTAL', esc_html__( 'Order Subtotal', 'north-commerce' ));
define('VAR_LABEL_SHIPPING_RATE_NAME', esc_html__( 'Shipping Rate Name', 'north-commerce' ));
define('VAR_LABEL_ORDER_SHIPPING', esc_html__( 'Order Shipping', 'north-commerce' ));
define('VAR_LABEL_ORDER_TAXATION_NAME', esc_html__( 'Order taxation name: TAX or VAT', 'north-commerce' ));
define('VAR_LABEL_ORDER_TAX_VALUE', esc_html__( 'Order tax value', 'north-commerce' ));
define('VAR_LABEL_ORDER_TOTAL', esc_html__( 'Order Total', 'north-commerce' ));
define('VAR_LABEL_ORDER_BUMP', esc_html__( 'Order Bump', 'north-commerce' ));
define('VAR_LABEL_COUPON', esc_html__( 'Coupon', 'north-commerce' ));
define('VAR_LABEL_UPSELLS', esc_html__( 'Upsells', 'north-commerce' ));
define('VAR_LABEL_SITE_URL', esc_html__( 'Site URL', 'north-commerce' ));

define('VAR_NAME_OPTION_1', esc_html__( 'Option 1', 'north-commerce' ));
define('VAR_NAME_OPTION_2', esc_html__( 'Option 2', 'north-commerce' ));
define('VAR_DESCRIPTION_LINE_ITEMS', esc_html__( 'Female Terracotta Suit', 'north-commerce' ));
define('VAR_DESCR_PROD_VARIANT_1', esc_html__( 'Strawberry Buttermilk Cake', 'north-commerce' ));
define('VAR_DESCR_PROD_VARIANT_2', esc_html__( 'Oat & Coconut Icebox Cookies', 'north-commerce' ));


/**
 * Notification template variables class.
 *
 *
 * @package north-commerce/admin
 * @author  North Commerce <hello@northplugins.com>
 * @link    https://northcommerce.com/
 * @since   0.1.0
 * @version 0.1.24
 */
class North_Commerce_Notification_Template_Variables {

    /**
     * @version 0.1.24
     */
    public const VAR_LIST = [
        'order' => [
            'full_name' => [
                'label' => VAR_LABEL_FULL_NAME,
                'example' => 'Roberto Weber',
            ],
            'first_name' => [
                'label' => VAR_LABEL_FIRST_NAME,
                'example' => 'Roberto',
            ],
            'last_name' => [
                'label' => VAR_LABEL_LAST_NAME,
                'example' => 'Weber',
            ],
            'email' => [
                'label' => VAR_LABEL_EMAIL,
                'example' => 'robertoweber@gmail.com',
            ],
            'company_name' => [
                'label' => VAR_LABEL_COMPANY_NAME,
            ],
            'company_logo' => [
                'label' => VAR_LABEL_COMPANY_LOGO,
            ],
            'phone' => [
                'label' => VAR_LABEL_PHONE_NUMBER,
                'example' => '+14845219603',
            ],
            'line_items_loop_start' => [
                'hidden' => true,
            ],
            'line_items_loop_end' => [
                'hidden' => true,
            ],
            'li_loop_start' => [
                'hidden' => true,
            ],
            'li_loop_end' => [
                'hidden' => true,
            ],
            'li_option_loop_start' => [
                'hidden' => true,
            ],
            'li_option_loop_end' => [
                'hidden' => true,
            ],
            'line_item_options_loop_start' => [
                'hidden' => true,
            ],
            'line_item_options_loop_end' => [
                'hidden' => true,
            ],
            'line_items' => [
                'hidden' => true,
                'example' => [
                    [
                        'description' => VAR_DESCRIPTION_LINE_ITEMS,
                        'amount' => '99.99',
                        'quantity' => '1',
                        'product_variant' => [
                            'image_url' => NORTH_COMMERCE_PLUGIN_DIR_URL . 'admin/images/example-product.png',
                            'sku' => null,
                            'price' => '9.99',
                            'product' => [
                                'slug' => 'product-slug',
                                'sku' => null,
                                'base_price' => '1.23',
                                'product_images' => [],
                            ],
                            'product_variant_option_values' => [
                                [
                                    'product_option_value' => [
                                        'display_value' => 'Value 1',
                                        'product_option' => [
                                            'name' => VAR_NAME_OPTION_1,
                                        ],
                                    ],
                                ],
                                [
                                    'product_option_value' => [
                                        'display_value' => 'Value 2',
                                        'product_option' => [
                                            'name' => VAR_NAME_OPTION_1,
                                        ],
                                    ],
                                ],
                                [
                                    'product_option_value' => [
                                        'display_value' => 'Value 1',
                                        'product_option' => [
                                            'name' => VAR_NAME_OPTION_2,
                                        ],
                                    ],
                                ],
                            ],
                        ],
                    ],
                    [
                        'description' => VAR_DESCR_PROD_VARIANT_1,
                        'sku' => null,
                        'amount' => '15.99',
                        'quantity' => '22',
                        'product_variant' => [
                            'image_url' => null,
                            'sku' => null,
                            'price' => null,
                            'product' => [
                                'slug' => 'product-slug',
                                'sku' => null,
                                'base_price' => '4.56',
                                'product_images' => [
                                    [ 'image_url' => NORTH_COMMERCE_PLUGIN_DIR_URL . 'admin/images/example-product.png' ],
                                ],
                            ],
                            'product_variant_option_values' => [],
                        ],
                    ],
                    [
                        'description' => VAR_DESCR_PROD_VARIANT_2,
                        'amount' => '1.99',
                        'quantity' => '333',
                        'product_variant' => [
                            'image_url' => null,
                            'sku' => null,
                            'price' => null,
                            'product' => [
                                'slug' => 'product-slug',
                                'sku' => null,
                                'base_price' => '7.89',
                                'product_images' => [],
                            ],
                            'product_variant_option_values' => [],
                        ],
                    ],
                ],
            ],
            'line_item_image' => [
                'hidden' => true,
                'label' => VAR_LABEL_LINE_ITEM_IMAGE,
                'example' => 'https://d1oco4z2z1fhwp.cloudfront.net/templates/default/1956/Strawberry_Buttermilk_Cake.png',
            ],
            'line_item_description' => [
                'hidden' => true,
                'label' => VAR_LABEL_LINE_ITEM_DESCRIPTION,
                'example' => VAR_DESCR_PROD_VARIANT_1,
            ],
            'line_item_quantity' => [
                'hidden' => true,
                'label' => VAR_LABEL_LINE_ITEM_QUANTITY,
                'example' => '2',
            ],
            'line_item_amount' => [
                'hidden' => true,
                'label' => VAR_LABEL_LINE_ITEM_AMOUNT,
                'example' => '1.99',
            ],
            'line_item_permalink' => [
                'hidden' => true,
                'label' => VAR_LABEL_LINE_ITEM_PERMALINK,
                'example' => 'http://your.site/products/product-slug',
            ],
            'line_item_option_name' => [
                'hidden' => true,
                'label' => VAR_LABEL_LINE_ITEM_OPTION_NAME,
                'example' => 'Size',
            ],
            'line_item_option_value' => [
                'hidden' => true,
                'label' => VAR_LABEL_LINE_ITEM_OPTION_VALUE,
                'example' => 'XXL',
            ],
            'shipping_address' => [
                'label' => VAR_LABEL_SHIPPING_ADDRESS,
                'example' => '541 Skippack Pike, Wellington, Pennsylvania, 19422',
            ],
            'shipping_address_line' => [
                'label' => VAR_LABEL_SHIPPING_ADDRESS_LINE_1,
                'example' => '541 Skippack Pike',
            ],
            'shipping_address_line_2' => [
                'label' => VAR_LABEL_SHIPPING_ADDRESS_LINE_2,
                'example' => '(3rd floor, suite 45)',
            ],
            'shipping_city' => [
                'label' => VAR_LABEL_SHIPPING_CITY,
                'example' => 'Wellington',
            ],
            'shipping_zip' => [
                'label' => VAR_LABEL_SHIPPING_ZIP,
                'example' => '19422',
            ],
            'shipping_state' => [
                'label' => VAR_LABEL_SHIPPING_STATE,
                'example' => 'Pennsylvania',
            ],
            'shipping_country' => [
                'label' => VAR_LABEL_SHIPPING_COUNTRY,
                'example' => 'United States',
            ],
            'billing_address' => [
                'label' => VAR_LABEL_BILLING_ADDRESS,
                'example' => '541 Skippack Pike, Wellington, Pennsylvania, 19422',
            ],
            'billing_address_line' => [
                'label' => VAR_LABEL_SHIPPING_ADDRESS_LINE_1,
                'example' => '541 Skippack Pike',
            ],
            'billing_address_line_2' => [
                'label' => VAR_LABEL_SHIPPING_ADDRESS_LINE_2,
                'example' => '(3rd floor, suite 45)',
            ],
            'billing_city' => [
                'label' => VAR_LABEL_BILLING_CITY,
                'example' => 'Wellington',
            ],
            'billing_zip' => [
                'label' => VAR_LABEL_BILLING_ZIP,
                'example' => '19422',
            ],
            'billing_state' => [
                'label' => VAR_LABEL_BILLING_STATE,
                'example' => 'Pennsylvania',
            ],
            'billing_country' => [
                'label' => VAR_LABEL_BILLING_COUNTRY,
                'example' => 'United States',
            ],
            'order_id' => [
                'label' => VAR_LABEL_ORDER_ID,
                'example' => 'orderid0123456789',
            ],
            'order_number' => [
                'label' => VAR_LABEL_ORDER_N,
                'example' => '1234',
            ],
            'order_date' => [
                'label' => VAR_LABEL_ORDER_DATE,
                'example' => 'May 4, 2021 at 09:30 am',
            ],
	        'payment_card_brand' => [
				'label' => VAR_LABEL_PAYMENT_CARD_BRAND,
		        'example' => 'Brand Logo',
	        ],
            'payment_method' => [
                'label' => VAR_LABEL_PAYMENT_METHOD,
                'example' => 'Stripe',
            ],
            'shipping_tracking' => [
                'label' => VAR_LABEL_SHIPMENT_TRACKING_N,
                'example' => '#123456',
            ],
            'carrier_name' => [
                'label' => VAR_LABEL_CARRIER_NAME,
                'example' => 'USPS',
            ],
            'estimate_delivery' => [
                'label' => VAR_LABEL_ESTIMATED_DELIVERY_DATE,
                'example' => 'May 4, 2021 at 09:30 am)',
            ],
            'order_subtotal' => [
                'label' => VAR_LABEL_ORDER_SUBTOTAL,
                'example' => '$ 117.97',
            ],
	        'order_shipping_rate' => [
                'label' => VAR_LABEL_SHIPPING_RATE_NAME,
                'example' => 'Rate Name',
            ],
            'order_shipping' => [
                'label' => VAR_LABEL_ORDER_SHIPPING,
                'example' => '$ 0.00',
            ],
            'order_tax_name' => [
                'label' => VAR_LABEL_ORDER_TAXATION_NAME,
                'example' => 'TAX',
            ],
            'order_tax_value' => [
                'label' => VAR_LABEL_ORDER_TAX_VALUE,
                'example' => '$ 0.00',
            ],
            'order_total' => [
                'label' => VAR_LABEL_ORDER_TOTAL,
                'example' => '$ 117.97',
            ],
            'order_bump' => [
                'label' => VAR_LABEL_ORDER_BUMP,
                'example' => '$ 0.00',
            ],
            'custom_fields' => [
                'label' => VAR_LABEL_ORDER_TOTAL,
                'example' => '',
            ],
            'coupon' => [
                'label' => VAR_LABEL_COUPON,
                'example' => '-10 %',
            ],
            'upsells' => [
                'label' => VAR_LABEL_UPSELLS,
                'example' => '',
            ],
            'site_url' => [
                'label' => VAR_LABEL_SITE_URL,
            ],
        ],
    ];

	//negative look before for '<!--' or '<!-- ' //variable is non commented
    private const VARIABLE_FORMAT = '/(?<!<!--|<!-- )({{\s*\w+\s*}})/';
    private const LINE_ITEMS_LOOP_FORMAT = '/({{\s*line_items_loop_start\s*}}(?:.|\n)*?{{\s*line_items_loop_end\s*}})/';
    private const LINE_ITEM_OPTIONS_LOOP_FORMAT = '/(?P<before>.*)?(?P<options_template>{{\s*line_item_options_loop_start\s*}}(?:.|\n)*?{{\s*line_item_options_loop_end\s*}})(?P<after>.*)?/s';

    protected $current_line_item_index;
    protected $current_line_item_option_index;
    protected $options_loop_template;

    /**
     * @since 0.1.19
     */
    public function get_notification_relation( $notification ) {
        $is_order = strpos( $notification['slug'], 'order' );
        $is_shipping = strpos( $notification['slug'], 'shipping' );
        $is_payment = strpos( $notification['slug'], 'payment' );

        $relation_order = false !== $is_order || false !== $is_shipping || false !== $is_payment;

        return $relation_order ? 'order' : null;
    }

    /**
     * @since 0.1.19
     */
    public function get_notification_variables( $notification ) {
        $relation = $this->get_notification_relation( $notification );
        return self::VAR_LIST[ $relation ] ?? null;
    }

    /**
     * @version 0.1.24
     */
    public function replace_template_variables( $string, array $data ) {

        if ( preg_match_all( self::LINE_ITEMS_LOOP_FORMAT, $string, $matches ) ) {
            foreach ( $matches[0] ?? [] as $loop_template ) {
                $replace = $this->replicate_line_item_loop_template( $loop_template, $data );
                if ( $replace ) {
                    $string = str_replace( $loop_template, $replace, $string );
                }
            }
        }

        if ( preg_match_all( self::VARIABLE_FORMAT, $string, $matches ) ) {

            $str_replace_once = function ( $search, $replace, $string ) {
                $pos = strpos( $string, $search );
                return false !== $pos
                    ? substr_replace( $string, $replace, $pos, strlen( $search ) )
                    : $string;
            };

            $template_vars_list = $matches[0] ?? [];
            foreach ( $template_vars_list as $variable ) {
                $var_name = preg_replace( '{{|}}', '', $variable );
                $var_name = trim( $var_name );

                if ( ! $var_name ) {
                    continue;
                }

                $replace = null;
                if ( $data['is_test'] ?? null ) {
                    $replace = $this->get_var_placeholder( $var_name, $data['relation'] );
                }

                if ( ! empty( $data['order']['id'] ) ) {
                    $replace = $this->get_order_var_replacement( $var_name, $data );
                }

                if ( isset( $replace ) ) {
                    $string = $str_replace_once( $variable, $replace, $string );
                }
            }
        }

        return $string;
    }


    /**
     * @version 0.1.24
     */
    protected function replicate_line_item_loop_template( string $loop_template, array $data ) {
        if ( $data['is_test'] ?? null ) {
            $line_items = self::VAR_LIST[ $data['relation'] ]['line_items']['example'] ?? null;
        }
        if ( ! empty( $data['order']['id'] ) ) {
            $line_items = $data['order']['line_items'] ?? null;
        }

        if ( ! is_array( $line_items ) ) {
            return;
        }

        $li_loop_template_headless = str_replace(
            [
                '{{line_items_loop_start}}',
                '{{line_items_loop_end}}',
            ],
            '',
            $loop_template,
        );
        $li_loop_template_headless = trim( $li_loop_template_headless );

        preg_match_all( self::LINE_ITEM_OPTIONS_LOOP_FORMAT, $li_loop_template_headless, $matches );
        $this->options_loop_template = $matches['options_template'][0] ?? false;

        $loop_template_replicated = '';
        foreach ( $line_items as $line_item ) {
            $li_template = $li_loop_template_headless;

            if ( $this->options_loop_template ) {
                $replace_to = $this->replicate_line_item_options_loop_template(
                    array_merge( $data, compact( 'line_item' ) )
                );
                $li_template = str_replace( $this->options_loop_template, $replace_to, $li_loop_template_headless );
            }

            $loop_template_replicated .= "{{li_loop_start}}{$li_template}{{li_loop_end}}\n" ;
        }

        return "{{line_items_loop_start}}\n{$loop_template_replicated}{{line_items_loop_end}}\n";
    }

    /**
     * @since 0.1.24
     */
    protected function replicate_line_item_options_loop_template( $data ):string {
        $option_loop_template_headless = str_replace(
            [
                '{{line_item_options_loop_start}}',
                '{{line_item_options_loop_end}}',
            ],
            '',
            $this->options_loop_template,
        );
        $option_loop_template_headless = trim( $option_loop_template_headless );

        $line_item_options = $data['line_item']['product_variant']['product_variant_option_values'];

        if ( ! $line_item_options ) {
            return '';
        }

        $loop_template_replicated = '';
        foreach ( $line_item_options as $_ ) {
            $loop_template_replicated .= "{{li_option_loop_start}}{$option_loop_template_headless}{{li_option_loop_end}}\n";
        }

        return "{{line_item_options_loop_start}}\n{$loop_template_replicated}{{line_item_options_loop_end}}\n";
    }

    /**
     * @version 0.1.24
     * @return string|null String for replace or `null` if no replace value
     */
    private function get_var_placeholder( string $var_name, string $relation ) {
        if ( $this->is_line_items_loop_variable( $var_name ) ) {
            $line_items = self::VAR_LIST[ $relation ]['line_items']['example'] ?? null;

            switch ( $var_name ) {
                case 'line_items_loop_start':
                    $this->current_line_item_index = 0;
                    $replacement = '';
                    break;
                case 'line_items_loop_end':
                    $this->validate_line_item_loop();
                    $this->current_line_item_index = null;
                    $replacement = '';
                    break;

                case 'line_item_options_loop_start':
                    $this->current_line_item_option_index = 0;
                    $replacement = '';
                    break;
                case 'line_item_options_loop_end':
                    $this->validate_line_item_option_loop();
                    $this->current_line_item_option_index = null;
                    $replacement = '';
                    break;

                case 'li_loop_start':
                case 'li_option_loop_start':
                    $replacement = '';
                    break;

                case 'li_loop_end':
                    $this->validate_line_item_loop();
                    $this->current_line_item_index++;
                    $replacement = '';
                    break;
                case 'li_option_loop_end':
                    $this->validate_line_item_option_loop();
                    $this->current_line_item_option_index++;
                    $replacement = '';
                    break;

                case 'line_item_image':
                    $this->validate_line_item_loop();
                    $image_placeholder = NORTH_COMMERCE_PLUGIN_DIR_URL . 'admin/images/product-empty-img.png';
                    $image_url = $line_items[ $this->current_line_item_index ]['product_variant']['image_url']
                        ?? $line_items[ $this->current_line_item_index ]['product_variant']['product']['product_images'][0]['image_url']
                        ?? null;
                    $replacement = $image_url ?? $image_placeholder;
                    break;

                case 'line_item_description':
                    $this->validate_line_item_loop();
                    $replacement = $line_items[ $this->current_line_item_index ]['description'] ?? null;
                    break;

                case 'line_item_quantity':
                    $this->validate_line_item_loop();
                    $replacement = $line_items[ $this->current_line_item_index ]['quantity'] ?? null;
                    break;

                case 'line_item_amount':
                    $this->validate_line_item_loop();
                    $amount = $line_items[ $this->current_line_item_index ]['amount'] ?? null;
                    $replacement = Settings::formatted_price( $amount );
                    break;

                case 'line_item_permalink':
                    $this->validate_line_item_loop();
                    $base = North_Commerce_Product::get_permalink_base();
                    $slug = $line_items[ $this->current_line_item_index ]['product_variant']['product']['slug'] ?? '';
                    $replacement = $base . $slug;
                    break;

                case 'line_item_option_name':
                    $this->validate_line_item_option_loop();
                    $options = $line_items[ $this->current_line_item_index ]['product_variant']['product_variant_option_values'] ?? null;
                    $option_name = $options[ $this->current_line_item_option_index ]['product_option_value']['product_option']['name'] ?? null;
                    $replacement = $option_name;
                    break;

                case 'line_item_option_value':
                    $this->validate_line_item_option_loop();
                    $option = $line_items[ $this->current_line_item_index ]['product_variant']['product_variant_option_values'][ $this->current_line_item_option_index ] ?? null;
                    $option_value = $option['product_option_value']['display_value'] ?? null;
                    $replacement = wp_unslash( $option_value );
                    break;

            }

            if ( isset( $replacement ) ) {
                return $replacement;
            }

        }

        if ( false !== strpos( $var_name, 'company_name' ) ) {
            return Settings::get_company_name();
        }

        if ( false !== strpos( $var_name, 'company_logo' ) ) {
            return Settings::get_company_logo_url();
        }

        if ( false !== strpos( $var_name, 'site_url' ) ) {
            return site_url();
        }

        return self::VAR_LIST[ $relation ][ $var_name ]['example'] ?? null;
    }

    /**
     * @since   0.1.19
     * @version 0.1.24
     * @return string|null String for replace or `null` if no replace value
     */
    private function get_order_var_replacement( string $var_name, array $data ) {
        if (
            'order' !== $data['relation']
            || empty( self::VAR_LIST[ $data['relation'] ][ $var_name ] )
        ) {
            // Bailout
            return null;
        }

        $order = $data['order'];

        if ( $this->is_line_items_loop_variable( $var_name ) ) {
            $line_items = $order['line_items'];

            switch ( $var_name ) {
                case 'line_items_loop_start':
                    $this->current_line_item_index = 0;
                    $replacement = '';
                    break;
                case 'line_items_loop_end':
                    $this->validate_line_item_loop();
                    $this->current_line_item_index = null;
                    $replacement = '';
                    break;

                case 'line_item_options_loop_start':
                    $this->current_line_item_option_index = 0;
                    $replacement = '';
                    break;
                case 'line_item_options_loop_end':
                    $this->validate_line_item_option_loop();
                    $this->current_line_item_option_index = null;
                    $replacement = '';
                    break;

                case 'li_loop_start':
                case 'li_option_loop_start':
                    $replacement = '';
                    break;
                case 'li_loop_end':
                    $this->validate_line_item_loop();
                    $this->current_line_item_index++;
                    $replacement = '';
                    break;
                case 'li_option_loop_end':
                    $this->validate_line_item_option_loop();
                    $this->current_line_item_option_index++;
                    $replacement = '';
                    break;

                case 'line_item_image':
                    $this->validate_line_item_loop();
                    $image_placeholder = NORTH_COMMERCE_PLUGIN_DIR_URL . 'admin/images/product-empty-img.png';
                    $replacement = $line_items[ $this->current_line_item_index ]['product_variant']['image_url']
                        ?? $line_items[ $this->current_line_item_index ]['product_variant']['product']['product_images'][0]['image_url']
                        ?? $image_placeholder;
                    break;

                case 'line_item_description':
                    $this->validate_line_item_loop();
                    $replacement = $line_items[ $this->current_line_item_index ]['description'] ?? null;
                    break;

                case 'line_item_quantity':
                    $this->validate_line_item_loop();
                    $replacement = $line_items[ $this->current_line_item_index ]['quantity'] ?? null;
                    break;

                case 'line_item_amount':
                    $this->validate_line_item_loop();
                    $amount = $line_items[ $this->current_line_item_index ]['amount'] ?? null;
                    $replacement = Settings::formatted_price( $amount );
                    break;

                case 'line_item_permalink':
                    $this->validate_line_item_loop();
                    $base = North_Commerce_Product::get_permalink_base();
                    $slug = $line_items[ $this->current_line_item_index ]['slug'] ?? null;
                    $replacement = $base . $slug;
                    break;

                case 'line_item_option_name':
                    $this->validate_line_item_option_loop();
                    $options = $line_items[ $this->current_line_item_index ]['product_variant']['product_variant_option_values'] ?? null;
                    $option_name = $options[ $this->current_line_item_option_index ]['product_option_value']['product_option']['name'] ?? null;
                    $replacement = $option_name;
                    break;

                case 'line_item_option_value':
                    $this->validate_line_item_option_loop();
                    $option = $line_items[ $this->current_line_item_index ]['product_variant']['product_variant_option_values'][ $this->current_line_item_option_index ] ?? null;
                    $option_value = $option['product_option_value']['display_value'] ?? null;
                    $replacement = wp_unslash( $option_value );
                    break;
            }

            return $replacement ?? null;
        }

        $shipping_address = $order['shipping_address'];
        $billing_address = $order['billing_address'];
        switch ( $var_name ) {
            case 'full_name':
                $replacement = $order['customer'][ 'first_name' ] . ' ' . $order['customer'][ 'last_name' ];
                break;

            case 'first_name':
            case 'last_name':
            case 'email':
            case 'phone':
                $replacement = $order['customer'][ $var_name ];
                break;
            case 'shipping_address':
                $replacement = $shipping_address['preformatted_line'] ?? '';
                break;
            case 'shipping_address_line':
                $replacement = $shipping_address['addressline1'] ?? '';
                break;
            case 'shipping_address_line_2':
                $replacement = $shipping_address['addressline2'] ?? '';
                break;
            case 'shipping_city':
                $replacement = $shipping_address['city'] ?? '';
                break;
            case 'shipping_zip':
                $replacement = $shipping_address['zipcode'] ?? '';
                break;
            case 'shipping_state':
                $replacement = $shipping_address['state'] ?? '';
                break;
            case 'shipping_country':
                $replacement = $shipping_address['country'] ?? '';
                break;

            case 'billing_address':
                $replacement = $billing_address['preformatted_line'] ?? esc_html__( 'Same As Shipping', 'north-commerce' );
                break;
            case 'billing_address_line':
                $replacement = $billing_address['addressline1'] ?? esc_html__( 'Same As Shipping', 'north-commerce' );
                break;
            case 'billing_address_line_2':
                $replacement = $billing_address['addressline2'] ?? '';
                break;
            case 'billing_city':
                $replacement = $billing_address['city'] ?? '';
                break;
            case 'billing_zip':
                $replacement = $billing_address['zipcode'] ?? '';
                break;
            case 'billing_state':
                $replacement = $billing_address['state'] ?? '';
                break;
            case 'billing_country':
                $replacement = $billing_address['country'] ?? '';
                break;

            case 'order_id':
                $replacement = $order['id'] ?? null;
                break;
            case 'order_number':
                $replacement = $order['order_number'] ?? null;
                break;
            case 'order_date':
                $replacement = $order['created'] ?? null;
                break;
            case 'order_subtotal':
                $replacement = Settings::formatted_price( $order['subtotal'] ?? null );
                break;
			case 'order_shipping_rate':
                $replacement = $order['shipping_details'][0]['service'] ?? null;
                break;
            case 'order_shipping':
                $replacement = Settings::formatted_price( $order['shipping'] ?? null );
                break;
            case 'order_tax_name':
                $replacement = Settings::get_tax_is_vat() === 'enabled' ? 'VAT' : 'TAX';
                break;
            case 'order_tax_value':
                $replacement = Settings::formatted_price( $order['tax'] ?? null );
                break;
            case 'order_total':
                $replacement = Settings::formatted_price( $order['total'] ?? null );
                break;
	        case 'payment_card_brand':
		        $replacement = $this->get_payment_card_brand_image($order['customer_payment_method']['brand'] ?? '');
		        break;
            case 'payment_method':
                $replacement = '';
                break;
            case 'shipping_tracking':
                $replacement = $order['shipping_detail']['tracking_number'] ?? null;
                break;
            case 'estimate_delivery':
                $replacement = $order['shipping_detail']['estimated_delivery'] ?? null;
                break;
            case 'company_name':
                $replacement = Settings::get_company_name();
                break;
            case 'company_logo':
                $replacement = Settings::get_company_logo_url();
                break;

            case 'site_url':
                $replacement = site_url();
                break;

            case 'order_bump':
            case 'custom_fields':
            case 'coupon':
				$replacement = $this->get_coupon_val( $order ) ?? 0;
				break;
            case 'upsells':
                // no such data in database
                break;
        }

        return $replacement ?? null;
    }

    protected function is_line_items_loop_variable( $var ):bool {
        return false !== strpos( $var, 'line_item' )
            || false !== strpos( $var, 'li_loop_' )
            || false !== strpos( $var, 'li_option_loop_' );
    }

    protected function validate_line_item_loop() {
        if ( isset( $this->current_line_item_index ) ) {
            return;
        }

        throw new Exception( 'Incorrect structure of notification email template.' );
    }

    protected function validate_line_item_option_loop() {
        $this->validate_line_item_loop();

        if ( isset( $this->current_line_item_option_index ) ) {
            return;
        }

        throw new Exception( 'Incorrect structure of notification email template.' );
    }

	private function get_payment_card_brand_image( $brand_slug = '' ) {
		return sprintf( '<img src="%s/%s.svg" width="50px" >',
			NORTH_COMMERCE_PLUGIN_DIR_URL . '/public/images',
			$brand_slug
		);
	}

	private function get_coupon_val( $order ) {
		if(empty($order)) return 0;
		$coupon_model = new CouponModel;
		$order_coupon = $coupon_model->get_coupon_by_order_id($order['id']);
		$discount_val = 0;
		if(empty($order_coupon['coupon_discount_type']['slug'])) return 0;

		switch ( $order_coupon['coupon_discount_type']['slug'] ) {
			case 'percent':
				if( empty(round($order['discount'])) && !empty($order_coupon['discount_amount'])){
					$order['discount'] = ($order['subtotal'] / 100) * $order_coupon['discount_amount'];
				}
				$discount_val = '-' . North_Commerce_Settings::formatted_price($order['discount']) . ' (' . $order_coupon['discount_amount'] . '%)';
				break;
			case 'fixed':
				$discount_val = '-' . North_Commerce_Settings::formatted_price($order['discount']) ;
				break;
			case 'free-shipping':
				$discount_val = esc_html__( 'Free shipping', 'north-commerce' );
				break;
		}

		return $discount_val;
	}

}
