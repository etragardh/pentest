<div class="webhook-title-container">
    <div class="webhook-title-meta">
        <h3> <?php esc_html_e('Webhooks', 'north-commerce'); ?></h3>
        <p class="title-info loader-message">
            <?php esc_html_e('Add or manage all of your webhooks.', 'north-commerce'); ?>
        </p>
    </div>
    <a href="<?php echo esc_url(get_site_url() . '/wp-admin/admin.php?page=north-commerce-settings&amp;tab=webhooks&amp;action=add'); ?>" class="btn submit-btn activate webhook-add">
        Add Webhook
    </a>
    <a href="#" id="delete-all" class="btn submit-btn activate">Delete All Checked</a>
</div>

<div id="webhooks-table"></div>
<div id="loading" style="display: none;">Please wait...</div>

<style>
    .events-list {
        font-style: italic;
        color: #888;
    }

    .webhooks-list td {
        padding-bottom: 1rem;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const renderWebhooks = (webhooks) => {
            let html = `
        <table class='webhooks-list'>
            <thead>
                <tr>
                    <th></th> <!-- Checkbox column -->
                    <th><a href="#" class="sort" data-column="url">URL</a></th>
                    <th><a href="#" class="sort" data-column="service">Service</a></th>
                    <th><a href="#" class="sort" data-column="created">Created</a></th>
                    <th><a href="#" class="sort" data-column="last_triggered">Last Triggered</a></th>
                </tr>
            </thead>
            <tbody>
`;

            webhooks.forEach(webhook => {
                const service = webhook.service || 'north-commerce';
                // Convert server time to local time
                const created = moment.utc(webhook.created).fromNow();
                const last_triggered = webhook.last_triggered ? moment.utc(webhook.last_triggered).fromNow() : 'N/A';
                html += `
            <tr>
                <td><input type="checkbox" class="delete-checkbox" data-id="${webhook.id}" /></td>
                <td><a href="?page=north-commerce-settings&amp;tab=webhooks&amp;action=edit&webhookId=${webhook.id}">${webhook.url}</a><div class='events-list'>${webhook.events.join(', ')}</div></td>
                <td>${service}</td>
                <td>${created}</td> <!-- Display local time -->
                <td>${last_triggered}</td> <!-- Display local time -->
            </tr>
            `;
            });

            html += `
            </tbody>
        </table>
        `;

            return html;
        };

        const renderPagination = (page, pages) => {
            let html = '<div class="pagination">';

            for (let p = 1; p <= pages; p++) {
                html += `<a href="#" class="page" data-page="${p}">${p}</a>`;
            }

            html += '</div>';

            return html;
        };

        let page = 1;
        let sortColumn = 'created';
        let sortOrder = 'DESC';

        const loadWebhooks = () => {
            document.getElementById('loading').style.display = 'block';
            fetch(ajaxurl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `action=load_webhooks&page=${page}&sortColumn=${sortColumn}&sortOrder=${sortOrder}`,
                })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('loading').style.display = 'none';
                    if (data.success) {
                        document.getElementById('webhooks-table').innerHTML = renderWebhooks(data.data.webhooks) + renderPagination(page, data.data.pages);
                    }
                });
        };

        const deleteWebhook = (id) => {
            fetch(ajaxurl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `action=delete_webhook&id=${id}`,
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        loadWebhooks();
                    }
                });
        };

        document.getElementById('delete-all').addEventListener('click', function(e) {
            const checkboxes = document.querySelectorAll('.delete-checkbox:checked');
            const ids = Array.from(checkboxes).map(checkbox => checkbox.getAttribute('data-id'));
            ids.forEach(deleteWebhook);
            e.preventDefault();
        });

        document.getElementById('webhooks-table').addEventListener('click', function(e) {


            if (e.target.classList.contains('page')) {
                page = parseInt(e.target.getAttribute('data-page'));
                loadWebhooks();
                e.preventDefault();
            }

            if (e.target.classList.contains('sort')) {
                if (sortColumn === e.target.getAttribute('data-column')) {
                    sortOrder = sortOrder === 'ASC' ? 'DESC' : 'ASC';
                } else {
                    sortColumn = e.target.getAttribute('data-column');
                    sortOrder = 'ASC';
                }
                loadWebhooks();
                e.preventDefault();
            }

            if (e.target.classList.contains('delete')) {
                if (confirm('Are you sure you want to delete this webhook?')) {
                    const id = e.target.getAttribute('data-id');
                    deleteWebhook(id);
                }
                e.preventDefault();
            }
        });

        loadWebhooks();
    });
</script>