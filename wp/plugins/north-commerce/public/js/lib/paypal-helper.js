/*
 * A JavaScript file for helping interact with the PayPal
 * JS SDK: bhttps://developer.paypal.com/sdk/js/reference/
 */

(function() {

    if(!window.NorthCommerce) {
        window.NorthCommerce = {};

    }

    const api = window.NorthCommerce.DataApi;
    const coMgr = window.NorthCommerce.CheckoutManager;

    window.NorthCommerce.PaypalHelper = {

        currency: function() {
            let elt = document.querySelector('*[data-currency-code]');
            if(elt && elt.dataset.currencyCode) {
                return elt.dataset.currencyCode;
            }

            throw new Error("Can't determine currency from data-currency-code");
        },

        install: function() {
            const me  = window.NorthCommerce.PaypalHelper;
            document.querySelector('.nc-place-order-container').innerHTML = '';
            paypal.Buttons({
                createOrder:  me.createOrder,
                onApprove: me.onApprove,
                onError: me.onError
            }).render('.nc-place-order-container');
        },

        createOrder: async function(data, actions) {
            const me  = window.NorthCommerce.PaypalHelper;
            const currency = me.currency();
            const order = await coMgr.theOrder();
            const lineItems = coMgr.getEntity('lineItems');
            const pu = {
                custom_id: order['id'],
                invoice_id: order['id'],

                items: lineItems.map(li => {
                    return {
                        quantity: li.quantity,
                        unit_amount: {
                            value: li.amount / li.quantity,
                            currency_code: currency
                        },
                        name: li.description
                    }
                }),
                amount: {
                    value: order['total'],
                    currency_code: currency,
                    breakdown: {
                        item_total: { value: order['subtotal'], currency_code: currency },
                        tax_total: { value: order['tax'], currency_code: currency },
                        shipping: { value: order['shipping'], currency_code: currency }
                    }
                }
            };

            return actions.order.create({
                purchase_units: [ pu ]
            });
        },

        onApprove: async function(data, actions) {
            const details = await actions.order.capture();
            let o = await coMgr.theOrder();
            let ot = await coMgr.theOrderTransaction();
            let status = await api.getBySlug('order-transaction-statuses', 'successful');
            await api.post(`order-transactions/${ot.id}`, {
                identity_token: details.id,
                order_transaction_status_id: status.id
            });
            coMgr.placeOrderStarted();
            coMgr.placeOrderFinished(o, { success: true });
        },

        onError: function(error) {
            alert("We could not proceed with your PayPal purchase: " + error);
        }


    };

})();
