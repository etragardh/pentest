let ncPaypalButtons = null

function paypalInit() {
    if (!document.querySelector('#paypal-buttons')) {
        return
    }

    const product = document.querySelector('.ProductRadio:checked').closest('[data-type="product"]')
    const form = document.querySelector('[data-type="form"]')

    if ('one-time' === product.getAttribute('data-product-type')) {

        ncPaypalButtons = paypal.Buttons({
            style: {
                height: 45
            },

            onClick: async function(data, actions) {
                clearPaymentError()
                const btn = form.querySelector('.CheckoutFormBodySubmitButton')
                const valid = NorthCommerce.singlePageCheckoutManager.validateCheckoutInputs(btn)

                return valid
                    ? actions.resolve()
                    : actions.reject()
            },

            createOrder: async function (data, actions) {

                const args = new FormData();
                args.append('action', 'paypal_payment_process')
                args.append('product', JSON.stringify( NorthCommerce.singlePageCheckoutManager.getProductValues(product) ))

                try {
                    const response = await fetch(ajax_object.ajaxurl, {
                        method: 'post',
                        body: args,
                        credentials: 'same-origin'
                    } );
                    const result = await response.json()
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: result.product_price,
                                currency_code: result.product_currency
                            },
                        }]
                    })
                } catch(error) {
                    showPaymentError('Payment Error: ' + error);
                }
            },

            onApprove: async function (data, actions) {

                return actions.order.capture().then(async function(details) {

                    const args = new FormData();
                    const formValues = {
                        'inputs' : NorthCommerce.singlePageCheckoutManager.getCheckoutData(form),
                        'status' : 'success',
                        'details' : details
                    };
                    args.append('action', 'paypal_order_create');
                    args.append('order_data', JSON.stringify(formValues));

                    try {
                        const response = await fetch(ajax_object.ajaxurl, {
                            method: 'post',
                            body: args,
                            credentials: 'same-origin'
                        })
                        const result = await response.json()

                        let url = window.location.href
                        if (form.getAttribute('data-redirect') !== null) {
                            url = form.getAttribute('data-redirect')
                        }
                        window.location.href = url

                    } catch(error) {
                        showPaymentError('Payment Error: ' + error);
                    }
                })

            },

            onError: async function (err) {
                const args = new FormData();
                const formValues = {
                    'inputs' : NorthCommerce.singlePageCheckoutManager.getCheckoutData(form),
                    'status' : 'failed',
                    'details' : err
                };
                args.append('action', 'paypal_order_create');
                args.append('order_data', JSON.stringify(formValues));

                try {
                    const response = await fetch(ajax_object.ajaxurl,
                        {
                            method: 'post',
                            body: args,
                            credentials: 'same-origin'
                        }
                    );
                    const result = await response.json();
                    err = JSON.parse(err.toString().substring(err.toString().indexOf("\n") + 1));
                    var text = err['message'] + '</br>';
                    if (err.details != null && err.details.length > 0) {
                        text += 'Details: ' + err.details[0].description;
                    }
                    showPaymentError('Payment Error: ' + text);
                } catch(error) {
                    showPaymentError('Payment Error: ' + error);
                }
            }
        })

    } else {

        ncPaypalButtons = paypal.Buttons({
            onClick: function(data, actions) {
                clearPaymentError()
                const valid = NorthCommerce.singlePageCheckoutManager.validateCheckoutInputs( form.querySelector('.CheckoutFormBodySubmitButton') );

                return valid
                    ? actions.resolve()
                    : actions.reject()
            },

            createSubscription: async function (data, actions) {
                const args = new FormData();

                args.append('action', 'paypal_payment_process');
                args.append('product', JSON.stringify( NorthCommerce.singlePageCheckoutManager.getProductValues(product) ))

                try {
                    const response = await fetch(ajax_object.ajaxurl,
                        {
                            method: 'post',
                            body: args,
                            credentials: 'same-origin'
                        }
                    );
                    const result = await response.json();
                    console.log(result);
                    return actions.subscription.create({
                        'plan_id': result.id
                    });
                } catch(error) {
                    showPaymentError('Payment Error: ' + error);
                }
            },

            onApprove: async function(data, actions) {
                const args = new FormData();
                const formValues = {
                    'inputs' : NorthCommerce.singlePageCheckoutManager.getCheckoutData(form),
                    'status' : 'success',
                    'details' : data
                };
                args.append('action', 'paypal_order_create');
                args.append('order_data', JSON.stringify(formValues));

                try {
                    const response = await fetch(ajax_object.ajaxurl,
                        {
                            method: 'post',
                            body: args,
                            credentials: 'same-origin'
                        }
                    )
                    const result = await response.json();
                    var url;
                    if (form.getAttribute('data-redirect') !== null) {
                        url = form.getAttribute('data-redirect');
                    } else {
                        url =  window.location.href;
                    }
                    window.location.href = url;
                } catch (error) {
                    showPaymentError('Payment Error: ' + error);
                }
            },

            onError: async function(error) {
                const args = new FormData();
                const formValues = {
                    'inputs' : NorthCommerce.singlePageCheckoutManager.getCheckoutData(form),
                    'status' : 'failed',
                    'details' : error
                };
                args.append('action', 'paypal_order_create');
                args.append('order_data', JSON.stringify(formValues));

                try {
                    const response = await fetch(ajax_object.ajaxurl, {
                        method: 'post',
                        body: args,
                        credentials: 'same-origin'
                    } );
                    const result = await response.json();

                    error = JSON.parse(error.toString().substring(error.toString().indexOf("\n") + 1));
                    var text = error['message'] + '</br>';
                    if (error.details != null && error.details.length > 0) {
                        text += 'Details: ' + error.details[0].description;
                    }
                    showPaymentError('Payment Error: ' + text);
                } catch (error) {
                    showPaymentError('Payment Error: ' + error);
                }
            }
        })

    }

    ncPaypalButtons.render('#paypal-buttons')
}

function paypalDestroy() {
    if (ncPaypalButtons !== null) {
        ncPaypalButtons.close()
        ncPaypalButtons = null
    }
}

function paypalReInit() {
	paypalDestroy()
	paypalInit()
}