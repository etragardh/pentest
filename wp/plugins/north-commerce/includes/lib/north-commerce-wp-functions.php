<?php
/*
 * A PHP file for implementing utility wordpress related functions
 */

class NcWpException extends Exception
{
	private $wp_error;

	public function __construct($wp_error)
	{
		$this->wp_error = $wp_error;
		parent::__construct($wp_error->get_error_message());
	}

	public function wpError()
	{
		return $this->wp_error;
	}
}


/*
 * If $value is a WP_Error, throw an exception.
 * Otherwise, we're good and return $value.
 */
function nc_wp_ok($value)
{
	if(is_wp_error($value)) {
		throw new NcWpException($value);
	} else {
		return $value;
	}
}

/**
 * Debugging log function
 *
 * @since 0.1.2
 * @version 0.1.5
 */
function nc_wp_trace( $something ) {

	if ( ! file_exists( '/var/log/httpd/wp_trace_log' ) ) {
		// Bailout.
		return;
	}

	file_put_contents(
		'/var/log/httpd/wp_trace_log',
		date( 'c' ) . '|' . ( is_string( $something ) || is_numeric( $something ) ? $something : print_r( $something, true ) ) . "\n",
		FILE_APPEND
	);

}

/*
 * Run some chunk of code with a filter temporarily in place
 */
function nc_with_filter($filter_name, $filter_callback, $task) {
	add_filter($filter_name, $filter_callback);
	try {
		return $task();
	} finally {
		remove_filter($filter_name, $filter_callback);
	}
}

function nc_with_action($action_name, $action_callback, $task) {
	add_action($action_name, $action_callback);
	try {
		return $task();
	} finally {
		remove_action($action_name, $action_callback);
	}
}

/*
* Temporarily switch to a new current user.
 * During the callback excecution's you can call
 * wp_get_current_user() and get back the temporary user
 *
 * All is restored when this function ends
 */
function nc_with_current_user($user, $callback)
{
	$agent = North_Commerce_Db_Agent::instance();
	$before = wp_get_current_user();
	try {
		wp_set_current_user($user instanceof WP_User ? $user->ID : $user);
		$pm = $agent->perspectiveManager();
		$p = $pm->perspectiveByUser($user);
		return $pm->withPerspective($p, function() use($callback) {
			return $callback();
		});
	} finally {
		wp_set_current_user($before->ID);
	}
}
