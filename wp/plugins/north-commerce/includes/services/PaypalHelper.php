<?php
/*
 * A PHP file for providing a wrapper around PayPal and the PayPal REST API.
 */

namespace NorthCommerce\Services;

use North_Commerce_Paypal;

class PaypalHelper
{

	private $nc_paypal;

	function __construct()
	{
		$this->nc_paypal = new North_Commerce_Paypal();
	}

	public function invokeApi($request) {
        $auth = $this->nc_paypal->is_test_mode() ? $this->nc_paypal->get_test_access_auth() : $this->nc_paypal->get_live_access_auth();
        $prefix =  $this->nc_paypal->is_test_mode() ? '.sandbox' : '';
        $headers = array(
            'Content-Type' => 'application/json',
            'Authorization' => "Basic $auth",
        );
		$path = ltrim(nc_g($request, 'path'), '/');
		$params = nc_g($request, 'params');
		$body = nc_g($request, 'body');
		$method = nc_g($request, 'method');

		$url = 'https://api' . $prefix . '.paypal.com/' . $path . ($params ? '?' . http_build_query($params) : '');

		$res = wp_remote_request($url, [
			'method' => $method,
			'headers' => $headers,
			'body'  => $body ? json_encode($body) : null,
		]);
		if($res['response']['code'] < 200 || $res['response']['code'] > 299) {
			throw new PaypalApiException($path, $res);
		}
		return json_decode($res['body'], true);
	}
}

class PaypalApiException extends \Exception
{
	function __construct($path, $response)
	{
		$message = "$path failed with status {$response['response']['code']}: {$response['body']}";
		parent::__construct($message);
	}
}
