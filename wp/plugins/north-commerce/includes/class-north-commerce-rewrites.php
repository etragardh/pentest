<?php
/*
 * A PHP file for wrapping up WordPress's WP_Rewrite
 * functionality. This let's us map custom permalinks to
 * our needed behavior
 */

class North_Commerce_Rewrites
{

	/*
	 * Sets up a page to support additional parameters
	 *
	 * Example:
	 * $page_id = 82, which corresponds to 'product-details'
	 * $params   = ['product_sku', 'variant_sku']
	 *
	 * Sets up a match for:
	 *   /product-details/<product_sku>/<variant_sku>
	 * and will send the user to the wordpress page with the name `product-details`.
	 *
	 * Inside this page you can call get_query_var('product_sku') and get_query_var('variant_sku')
	 * to get the values from the URL.
	 *
	 * Call this function from within the `init` hook.
	 *
	 * Returns the an array with the keys:
	 *  source_regexp
	 *  dest_uri
	 */
	public function registerPageWithParams($page_id, $params) {
		$permalink = get_permalink($page_id);
		$path      = trailingslashit(substr(parse_url($permalink, PHP_URL_PATH), 1));
		$source_regexp = "^$path";
		foreach($params as $p) {
			unset($p);
			$source_regexp .= "([^/]+)/";
		}
		$source_regexp .= '?$';

		$dest_uri = "index.php?page_id={$page_id}";
		foreach($params as $i => $param) {
			$dest_uri .= '&' . $param . '=$matches[' . ($i+1) . ']';
		}

		add_rewrite_rule($source_regexp, $dest_uri, 'top');

		add_filter('query_vars', function($vars) use($params) {
			foreach($params as $p) {
				if(!in_array($p, $vars)) {
					$vars[] = $p;
				}
			}
			return $vars;
		});

		return [
			'source_regexp' => $source_regexp,
			'dest_uri' => $dest_uri
		];
	}

}
