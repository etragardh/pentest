<?php
namespace NorthCommerce\Models;

defined( 'ABSPATH' ) || exit;

/**
 * Notification model.
 *
 * @package north-commerce/includes/models
 * @link    https://northcommerce.com/
 * @since   0.1.19
 * @version 0.1.19
 */
class NotificationModel extends BaseModel {

    public function __construct() {
        parent::__construct();

        $this->table = 'notifications';
        $this->subtables = [
            'types' => 'notification_types'
        ];
    }

    public function getExpands() {
        return [
            'notification_type'
        ];
    }

    public function get( $criteria = true, $options = [] ) {
        if ( empty( $options['expand'] ) ) {
            $options['expand'] = $this->getExpands();
        }

        $notification = $this->ea->get( $this->table, $criteria, $options );

        if ( ! empty( $notification['email_body'] ) ) {
            $notification['email_body'] = html_entity_decode( $notification['email_body'], ENT_QUOTES|ENT_SUBSTITUTE|ENT_HTML5 );
        }

        return $notification;
    }

    public function get_by_id( $id, $options = [] ) {
        return $this->get( [ 'id' => $id ], $options );
    }

    public function get_by_slug( $slug, $options = [] ) {
        return $this->get( [ 'slug' => $slug ], $options );
    }

    public function list( $criteria = true, $options = [] ) {
        return $this->ea->list( $this->table, $criteria, $options );
    }

    public function list_by_type_id( $type_id, $options = [] ) {
        $criteria = [ 'notification_type.id' => $type_id ];
        return $this->list( $criteria, $options );
    }

    public function store( $data ) {
        return $this->ea->store( $this->table, $data );
    }


    // Notification Types

    public function list_types( $criteria = true, $options = [] ) {
        return $this->ea->list( $this->subtables['types'], $criteria, $options );
    }

    public function get_type( $criteria = true, $options = [] ) {
        return $this->ea->get( $this->subtables['types'], $criteria, $options );
    }

    public function get_type_by_slug( $type_slug, $options = [] ) {
        return $this->get_type( [ 'slug' => $type_slug ], $options );
    }

    public function store_type( $type_data ) {
        return $this->ea->store( $this->subtables['types'], $type_data );
    }

}
