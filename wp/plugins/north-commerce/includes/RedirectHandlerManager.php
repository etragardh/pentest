<?php
/**
 * A PHP file for allowing the plugin to register redirect handlers. This is
 * code that will be run on `template_redirect` and is run before a page
 * is outputted to the UI
 */

namespace NorthCommerce;

use Exception;
use NorthCommerce\Redirects\SettingsPageRedirectHandler;
use NorthCommerce\Redirects\StripeConfirmPaymentRedirectHandler;

class RedirectHandlerManager {

	private static $instance;
	private $handlers;

	public static function instance() : RedirectHandlerManager {
		if ( self::$instance == null ) {
			self::$instance = new RedirectHandlerManager();
		}
		return self::$instance;
	}

	private function __construct() {
		$this->handlers = [
			new StripeConfirmPaymentRedirectHandler(),
			new SettingsPageRedirectHandler()
		];
	}

	public function setup() {
		add_action( 'template_redirect', function() {
			$this->execute();
		} );
	}

	private function execute() {
		if ( ! isset( $_GET[ NC_REDIRECT_HANDLER_ACTION_NAME ] ) ) {
			return;
		}

		$looking_for = $_GET[ NC_REDIRECT_HANDLER_ACTION_NAME ];

		foreach( $this->handlers as $h ) {
			if ( $looking_for == $h->slug() ) {
				$this->executeHandler($h);
			}
		}
	}

	/**
	 * @version 0.1.24
	 */
	private function executeHandler( $handler ) {
		try {
			$url = $handler->handle( $_GET );
		} catch( Exception $ex ) {
			$url = $handler->onErrorUrl( $ex );
		}

		if (
			is_string( $url )
			&& wp_redirect( $url )
		) {
			exit();
		}
	}

}
