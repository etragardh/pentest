<?php
/*
 * A PHP file for expanding db entries based on a path description.
 *
 * Suppose you have an order entity and you want to have easy access to the
 * customer's shipping and billing addresses. You can expand `$order` by using the
 * expansion string:
 *    'customer.shipping_address,customer.billing_address'
 */

define('NORTH_COMMERCE_DB_EXPAND_NONE', 'none');
class North_Commerce_Db_Expander
{

	private $cache;

	function __construct() {
		$this->cache = North_Commerce_Db_Agent::instance()->cache();
	}

	/**
	 * Return true if it's possible to expand `$table` using
	 * the expansion notation defined by `$expansion`
	 */
	public function validate( $table, $expansion ) {
		$expansion = is_array( $expansion ) ? implode( ',', $expansion ) : $expansion;
		return $this->cache->value(
			"db.expander.validate.$table.$expansion",
			function() use ( $table, $expansion ) {
				return $this->expand( $table, true, $expansion );
			}
		);
	}

	/**
	 * Expand `$entity` by executing the procedure defined above.
	 */
	public function expand( $table, $entity, $expansion ) {
		if ( $expansion == NORTH_COMMERCE_DB_EXPAND_NONE ) {
			return is_array( $entity ) ? nc_g( $entity, 'id' ) : $entity;
		}

		$expansions = is_array( $expansion ) ? $expansion : explode( ',', $expansion );
		foreach ( $expansions as $ex ) {
			$entity = $this->doExpansion(
				explode( '.', $ex ),
				$table,
				$entity
			);
			if ( $entity === false ) {
				return false;
			}
		}

		return $entity;
	}

	private function doExpansion( $expansion, $table, $source ) {
		if ( empty( $expansion ) ) {
			return $source;
		}

		$agent = North_Commerce_Db_Agent::instance();
		$ea = $agent->entityAccess();
		$slug = $agent->entityToTableName( array_shift( $expansion ) );
		$schema = $agent->schema();
		$cols = $schema->tableCols( $table );

		if (
			( $col = nc_g( $cols, "{$slug}_id" ) )
			&& 'REF' === $col['type']
		) {

			if ( is_array( $source ) ) {
				$entity = isset( $source[ $slug ] )
					? $source[ $slug ]
					: $ea->get( $col['ref_table'], [ 'id' => $source[ "{$slug}_id" ] ] );
				$entity = $this->doExpansion( $expansion, $col['ref_table'], $entity );
				$source[ $slug ] = $entity;
				return $source;
			} else {
				return $this->doExpansion( $expansion, $col['ref_table'], $source );
			}

		} elseif (
			$col = $schema->tableRefColumn( $slug, $table, [ 'not_found' => false ] )
		) {

			if ( is_array( $source ) ) {
				$entities = isset( $source[ $slug ] )
					? $source[ $slug ]
					: $ea->list( $slug, [ $col => $source['id'] ] );
				foreach ( $entities as $i => $entity ) {
					$entities[$i] = $this->doExpansion( $expansion, $slug, $entity );
				}
				$source[ $slug ] = $entities;
				return $source;
			} else {
				return $this->doExpansion( $expansion, $slug, $source );
			}

		} else {

			if ( is_array( $source ) ) {
				throw new Exception( "Can not expand: $table.$slug" );
			}
			return false;

		}
	}

}
