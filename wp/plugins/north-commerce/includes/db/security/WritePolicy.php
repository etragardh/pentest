<?php
/*
 * A PHP file for describing what the rules are with respect to
 * how an object in the database can be written to by various
 * roles.
 *
 * We define:
 * 1. The required / option columns at creation time
 * 2. The required / option columns at update tiem
 * 3. Code to run before an object is created
 * 4. Code to run after an object is created
 * 5. Code to run before an object is updated
 * 6. Code to run after an object is created
 *
 * This is needed because we want to grant limited write access to
 * customer/public users, and yet make sure that objects are properly
 * defined.
 *
 * See the individual WritePolicy objects to see this code in action.
 *
 */

namespace NorthCommerce\Db\Security;

use North_Commerce_Db_Agent;

abstract class WritePolicy
{

	protected $agent;
	protected $ea;

	function __construct()
	{
		$this->agent = North_Commerce_Db_Agent::instance();
		$this->ea = $this->agent->entityAccess();
	}

	public function createColumnRules($values)
	{
		unset($values);
		return new ColumnRules([], []);
	}

	public function updateColumnRules($entity, $changes)
	{
		unset($entity);
		unset($changes);
		return new ColumnRules([], []);
	}


	public function canDelete($entity)
	{
		unset($entity);
		return false;
	}

	public function prepareForCreate($values)
	{
		return $values;
	}

	public function entityCreated($entity)
	{
		return $entity;
	}

	public function prepareForUpdate($entity, $changes)
	{
		unset($entity);
		return $changes;
	}

	public function entityUpdated($entity)
	{
		return $entity;
	}

	public function entityDeleted($entity)
	{
		unset($entity);
	}
}
