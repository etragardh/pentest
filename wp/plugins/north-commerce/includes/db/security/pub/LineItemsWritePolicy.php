<?php
namespace NorthCommerce\Db\Security\Pub;

use NorthCommerce\Db\Collections\OrderStatuses;
use NorthCommerce\Db\Effects\{
	FillInLineItemEffect,
	UpdateOrderTotalsEffect,
	UpdateOrderTransactionAmountEffect
};
use NorthCommerce\Db\Security\{
	ColumnRules,
	WritePolicy
};

/**
 * Public write rules for Line Items.
 *
 * @since   0.1.10
 * @version 0.1.10
 */
class LineItemsWritePolicy extends WritePolicy {

	private $editable_cols = [
		'product_variant_id',
		'quantity',
	];

	public function createColumnRules( $values ) {
		$required = array_merge( [ 'order_id' ], $this->editable_cols );
		return new ColumnRules( $required, [] );
	}

	public function updateColumnRules( $line_item, $changes ) {
		$o = $this->ea->ref( $line_item['order_id'] );
		if ( OrderStatuses::created()->id == $o['order_status_id'] ) {
			return new ColumnRules( [], $this->editable_cols );
		}

		return new ColumnRules( [], [] );
	}

	public function canDelete( $entity ) {
		$o = $this->ea->ref( $entity['order_id'] );
		if ( OrderStatuses::created()->id != $o['order_status_id'] ) {
			return false;
		}

		return true;
	}

	public function prepareForCreate( $values ) {
		return FillInLineItemEffect::run( $values );
	}

	public function prepareForUpdate( $line_item, $changes ) {
		return $this->prepareForCreate( $changes + $line_item );
	}

	public function	entityCreated( $line_item ) {
		return $this->lineItemChangedSoUpdateOrder($line_item);
	}

	public function	entityUpdated( $line_item ) {
		return $this->lineItemChangedSoUpdateOrder($line_item);
	}

	public function entityDeleted($line_item)
	{
		$this->lineItemChangedSoUpdateOrder($line_item);
	}

	private function lineItemChangedSoUpdateOrder($line_item)
	{
		$o = $this->ea->ref( $line_item['order_id'] );

		UpdateOrderTotalsEffect::run( $o );

		$ot = $this->ea->get( 'order_transactions', [ 'order_id' => $o['id'] ] );
		if ( $ot ) {
			UpdateOrderTransactionAmountEffect::run( $ot );
		}

		return $line_item;
	}
}
