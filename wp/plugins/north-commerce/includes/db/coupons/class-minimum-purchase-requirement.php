<?php
namespace NorthCommerce\Db\Coupons;

defined( 'ABSPATH' ) || exit;

use NorthCommerce\Db\Collections\CouponRequirements as Requirements;
use North_Commerce_Settings as Settings;

/**
 * Minimum purchase requirement.
 *
 * @package north-commerce/includes/db/coupons
 * @author  North Commerce <hello@northplugins.com>
 * @link    https://northcommerce.com/
 * @since   0.1.21
 * @version 0.1.21
 */
class Minimum_Purchase_Requirement extends Requirement {

	protected $coupon_requirement_amount;
	protected $min_amount_id;
	protected $min_quantity_id;

	public function verify( $coupon, Coupon_Criteria $criteria ) {
		$this->coupon_requirement_amount = $coupon['requirement_amount'];
		$this->min_amount_id = Requirements::minimumPurchaseAmount()->id;
		$this->min_quantity_id = Requirements::minimumQuantity()->id;

		$is_valid = true;
		switch ( $coupon['coupon_requirement_id'] ) {

			case $this->min_amount_id :
				$is_valid = $criteria->get_cart_total() >= $this->coupon_requirement_amount;
				return $is_valid ?: $this->error_message( $this->min_amount_id );

			case $this->min_quantity_id :
				$is_valid = $criteria->get_cart_quantity() >= $this->coupon_requirement_amount;
				return $is_valid ?: $this->error_message( $this->min_quantity_id );

		}

		return $is_valid;
	}

	public function error_message( $error_id ): string {
		$errors = [
			$this->min_amount_id =>  __( sprintf(
				'Cart subtotal must be at least %1$s%2$s.',
				Settings::get_currency_symbol(),
				$this->coupon_requirement_amount
			), 'north-commerce' ),

			$this->min_quantity_id => __( sprintf(
				'You must purchase at least %s items.',
				(int) $this->coupon_requirement_amount
			), 'north-commerce' ),

			'default' => __( 'Sorry, you are not allowed to use this promo code.', 'north-commerce' ),
		];

		return $errors[ $error_id ] ?? $errors['default'];
	}

}
