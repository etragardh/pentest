<?php
/*
 * A PHP file for implementing a single Database Effect - some
 * particular action against one or more rows in the database.
 *
 * Effects allow us to bundle up a task, like say, recalculating
 * the order total into one place.
 *
 * Effects are intentionally separate from the Automations framework.
 * Even if you're not using automations or other parts of the security
 * framework you can still make use of effects.
 *
 * Effects are *always* run at an administrative level, so they
 * they bypass all security rules.
 *
 * Effects are broken down into both PreEffect and PostEffect.
 * See those classes for details.
 *
 * You code an effect by implementing the `behavior($target)` function.
 *
 * You execute an effect by calling the `run($target)` method.
 */

namespace NorthCommerce\Db\Effects;

use North_Commerce_Db_Agent;
use North_Commerce_Db_Entity_Access;

abstract class Effect {

	protected static ?North_Commerce_Db_Entity_Access $ea = null;
	protected static ?North_Commerce_Db_Agent $agent = null;

	/**
	 * Implement the logic of the Effect here.
	 */
	protected static abstract function behavior( $target );

	public static function run( $target ) {
		if ( Effect::$ea == null ) {
			Effect::$agent = North_Commerce_Db_Agent::instance();
			Effect::$ea = Effect::$agent->entityAccess();
		}

		return Effect::$agent->perspectiveManager()->asAdministrator(
			function() use ( $target ) {
				return static::behavior( $target );
			}
		);
	}

}
