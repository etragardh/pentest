<?php
 namespace NorthCommerce\Db\Sql;

/**
 * A PHP file for representing an SQL Join statement.
 */


use North_Commerce_Db_Agent;

class Join extends SqlConstruct {
	private $source_table;
	private $source_column;
	private $source_alias_prefix;
	private $dest_table;
	private $dest_column;
	private $dest_alias_prefix;
	private $is_inner;
	private $is_one_to_one;

	function __construct(
		$source_alias_prefix,
		$source_table,
		$source_column,
		$dest_alias_prefix,
		$dest_table,
		$dest_column,
		$is_inner,
		$is_one_to_one
	) {
		$this->source_table = $source_table;
		$this->source_column = $source_column;
		$this->source_alias_prefix = $source_alias_prefix;
		$this->dest_table = $dest_table;
		$this->dest_column = $dest_column;
		$this->dest_alias_prefix = $dest_alias_prefix;
		$this->is_inner = $is_inner;
		$this->is_one_to_one = $is_one_to_one;
	}

	public function toSql() {
		$table_prefix = North_Commerce_Db_Agent::instance()->schema()->getTablePrefix();
		$join_prefix = $this->is_inner ? '' : 'LEFT OUTER ';
		return "{$join_prefix}JOIN {$table_prefix}{$this->dest_table} {$this->dest_alias_prefix}{$this->dest_table} ON " .
			   "({$this->source_alias_prefix}{$this->source_table}.$this->source_column = {$this->dest_alias_prefix}{$this->dest_table}.$this->dest_column)";
	}

	public function name() {
		return "{$this->source_alias_prefix}{$this->source_table}:{$this->dest_alias_prefix}{$this->dest_table}";
	}

	public function isOneToOne() {
		return $this->is_one_to_one;
	}
}
