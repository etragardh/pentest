<?php
/**
 * A PHP file for implementing operators that take in
 * any number of arguments
 *
 * @since   0.1.3
 * @version 0.1.13
 */
namespace NorthCommerce\Db\Sql;

class NaryOperator extends Operator {

	private $expressions;

	function __construct($operator, $expressions) {
		parent::__construct($operator);
		$this->expressions = $expressions;
	}

	/**
	 * @since   0.1.3
	 * @version 0.1.13
	 */
	public function toSql( $add_prefix = null ) {
		$args = array_map(
			function ( $op ) use ( $add_prefix ) {
				return '(' . $op->toSql( $add_prefix ) . ')';
			},
			$this->expressions
		);

		$join = strtoupper( $this->operator() );
		return implode( " $join ", $args );
	}

	public function joins() {
		$joins = new Joins();
		foreach($this->expressions as $exp) {
			$joins->add($exp->joins());
		}
		return $joins;
	}

	public function	subExpressions() {
		return $this->expressions;
	}
}
