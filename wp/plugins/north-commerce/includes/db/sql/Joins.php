<?php
/*
 * A PHP file for representing a collection of Joins.
 * Joins are set of Join objects that you can safely
 * add duplicates and yet only the minimum set of Joins
 * will be stored.
 */

namespace NorthCommerce\Db\Sql;

class Joins extends SqlConstruct {

	private $joins;

	function __construct()
	{
		$this->joins = [];
	}

	/*
	 * Can add any of these types:
	 *  Join
	 *  [ Join, Join, ... ]
	 *  Joins
	 */
	function add($join)
	{
		if($join instanceof Join) {
			$this->add([$join]);
		} elseif($join instanceof Joins) {
			$this->add($join->toArray());
		} elseif(nc_is_seq_array($join)) {
			foreach($join as $j) {
				if(!($j instanceof Join)) {
					throw new \Exception("Can't join non-join object.");
				}
				if(!isset($this->joins[$j->name()])) {
					$this->joins[$j->name()] = $j;
				}
			}
		} else {
			throw new \Exception("Unknown join type: " . print_r($join, true));
		}
	}

	function toSql()
	{
		return implode(" ", array_map(function($j) { return $j->toSql(); },
									  $this->joins));
	}

	function toArray()
	{
		return array_values($this->joins);
	}

	function allOneToOne()
	{
		foreach($this->joins as $j) {
			if(!$j->isOneToOne()) {
				return false;
			}
		}
		return true;
	}
}
