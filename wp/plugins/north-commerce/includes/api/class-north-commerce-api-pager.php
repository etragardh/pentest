<?php

define( 'NORTH_COMMERCE_REST_DATA_API_DEFAULT_LIMIT', 100 );

/**
 * API Pager class.
 *
 * Implements paging in North Commerce REST API
 *
 *
 * @package north-commerce/admin/templates/order
 * @author  North Commerce <hello@northplugins.com>
 * @link    https://northcommerce.com/
 * @since   0.1.3
 */
class North_Commerce_Api_Pager {

	/**
	 * Use the query param limit to derive what our limit
	 * for this request should be.
	 */
	public function limit( $req ) {
		return $req->has_param( 'limit' )
			? $req->get_param( 'limit' )
			: NORTH_COMMERCE_REST_DATA_API_DEFAULT_LIMIT;
	}

	public function page( $req ) {
		return $req->has_param( 'page' )
			? $req->get_param('page')
			: 1;
	}

	/**
	 * Using page and limit to derive the offset into
	 * the result set.
	 */
	public function offset( $req ) {
		$page = $this->page( $req );
		$limit = $this->limit( $req );
		return ( $page - 1 ) * $limit;
	}

	public function addPaging( $req, $res ) {
		$limit = $this->limit( $req );
		$page  = $this->page( $req );

		$next_url = count( $res['data'] ) > $limit ? $this->nextUrl( $req ) : false;
		$prev_url = $page > 1 ? $this->prevUrl( $req ) : false;

		$res['data'] = array_slice( $res['data'], 0, $limit );
		$res['meta']['next_page_link'] = $next_url;
		$res['meta']['prev_page_link'] = $prev_url;
		return $res;
	}

	private function makeUrl( $req, $overrides ) {
		$url = rest_url( $req->get_route() );
		$query_params = $overrides + $req->get_query_params();
		return $url . ( $query_params ? '?' . http_build_query( $query_params ) : '' );
	}

	public function nextUrl( $req ) {
		return $this->makeUrl(
			$req,
			[ 'page' => $this->page( $req ) + 1 ]
		);
	}

	public function prevUrl( $req ) {
		return $this->makeUrl(
			$req,
			[ 'page' => $this->page( $req ) - 1 ]
		);
	}
}
