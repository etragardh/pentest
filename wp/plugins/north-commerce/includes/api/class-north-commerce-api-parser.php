<?php
/**
 * API Parser class.
 *
 * Parsing parameters and other aspects of North Commerce API.
 * For example, we need to convert a string like: `id:asc,total:desc`
 * into a proper order by expression.
 *
 *
 * @package north-commerce/admin/templates/order
 * @author  North Commerce <hello@northplugins.com>
 * @link    https://northcommerce.com/
 * @since   0.1.3
 */
class North_Commerce_Api_Parser {

	private $db_helper;

	public function __construct() {
		$this->db_helper = new North_Commerce_Api_Db_Helper();
	}

	public function parseSort( $sort, $req ) {
		$cols = $this->db_helper->targetTableColumns( $req );
		$sql = [];
		$terms = explode(',', $sort);
		foreach ( $terms as $t ) {
			[ $col, $direction ] = explode( ':', $t );

			if ( ! ( in_array( $direction, [ 'asc', 'desc' ] ) ) ) {
				return false;
			}

			if ( ! isset( $cols[ $col ] ) ) {
				return false;
			}

			$sql[] = "$col $direction";
		}

		return implode( ', ', $sql );
	}

	public function parseFilter( $filter ) {
		$terms = explode( ',', $filter );
		$op_map = [
			'equal' => '=',
			'eq' =>	'=',
			'gt' => '>',
			'lt' => '<',
			'like' => 'LIKE'
		];
		$criteria = [];

		foreach ( $terms as $t ) {
			[ $lhs, $op, $rhs ] = explode( ':', $t );

			if ( ! in_array( $op, array_keys( $op_map ) ) ) {
				return false;
			}

			$criteria[ $lhs ] = [ $op_map[ $op ], $rhs ];
		}

		return $criteria;
	}

}
