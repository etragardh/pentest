<?php
namespace NorthCommerce;

use Exception;

define( 'NC_TEMPLATE_DELEGATE', 'delegate' );

/**
 * A PHP file for serving up templates
 */
class Template_Manager {

	private $root;
	private $delegate;

	public function __construct( $root, $options = [] ) {
		$known_roots = [ 'admin', 'public', 'tests' ];

		if ( ! in_array( $root, $known_roots ) ) {
			throw new Exception( "Unknown root: $root" );
		}

		$this->root = $root;
		$this->delegate = nc_g( $options, NC_TEMPLATE_DELEGATE );
	}

	public function use( $template_path, $template_vars = [] ) {
		$template_path = apply_filters( 'nc_template_manager_use', $template_path, $this->root, $template_vars );
		$template_abs_path = __DIR__ . "/../{$this->root}/templates/$template_path.php";

		if ( ! file_exists( $template_abs_path ) ) {
			throw new Exception( "Template: $template_path ($template_abs_path) not found" );
		}

		$hook_name = str_replace( [ '/', '-' ], [ '_', '_' ], $template_path );

		do_action( "nc_before_template", $template_path, $this->root, $hook_name, $template_vars );
		do_action( "nc_before_{$this->root}_{$hook_name}_template" );

		extract( $template_vars );
		require $template_abs_path;

		do_action( "nc_after_template", $template_path, $this->root, $hook_name, $template_vars );
		do_action( "nc_after_{$this->root}_{$hook_name}_template" );
	}

	public function __call($name, $args) {
		if ( $this->delegate ) {
			if ( ! method_exists( $this->delegate, $name ) ) {
				throw new Exception( "$name not found on " . get_class( $this->delegate ) );
			}
			return call_user_func_array( [ $this->delegate, $name ], $args );
		}
	}

}
