<?php
namespace BricksUltimate\Elements;

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

use BricksUltimate\Helpers;

class WooMiniCart extends \Bricks\Element {
	public $category 	= 'cart';
	public $name 		= 'bu-mini-cart';
	public $icon 		= 'ti-layout-cta-left';
	public $scripts 	= [ 'buMiniCartFragments' ];
	public $nestable 	= true;

	// Return localized element label
	public function get_label() {
		return esc_html__( '(BU)Mini Cart Builder', 'bricksultimate' );
	}

	// Set builder controls
	public function set_controls() {
		$this->controls['emptyCartSelector'] = [
			'tab'    => 'content',
			'type'   => 'text',
			'label'  => esc_html__( 'Empty cart message selector', 'bricksultimate' ),
			'placeholder'  => esc_html__( 'Enter empty cart message selector', 'bricksultimate' )
		];
	}

	// Enqueue element styles and scripts
	public function enqueue_scripts() {
		if( bricks_is_builder() || bricks_is_builder_iframe() || bricks_is_builder_call() ){
			wp_enqueue_style( 'bu-minicart', Helpers::get_asset_url('css') . 'minicart.min.css', [], filemtime(Helpers::get_asset_path('css') . 'minicart.min.css') );
		}
		wp_enqueue_script( 'bu-minicart', Helpers::get_asset_url('js') . 'minicart.min.js', ['wc-cart-fragments'], filemtime(Helpers::get_asset_path('js') . 'minicart.min.js'), true );
	}

	public function add_actions() {
		if( Helpers::checkBuElement('bu-mini-cart') && ! bricks_is_builder() ) {
			add_action( 'wp_enqueue_scripts', function() {
				wp_enqueue_style( 'bu-minicart', Helpers::get_asset_url('css') . 'minicart.min.css', [], filemtime(Helpers::get_asset_path('css') . 'minicart.min.css') );
			});
		}
	}

	// Render element HTML
	public function render() {
		add_filter( 'bricks/element/render_attributes', [ '\BricksUltimate\Helpers', 'bu_add_attributes' ], 1000, 3 );
		add_filter( 'woocommerce_is_attribute_in_product_name', '__return_false' );

		$this->set_attribute( '_root', 'data-post-id', ! empty( $this->post_id ) ? $this->post_id : '1' );

		$this->set_attribute( '_root', 'data-empty-cart', Helpers::get_value( $this->settings, 'emptyCartSelector', false ) );

		echo "<div {$this->render_attributes("_root")}>";

		echo \Bricks\Frontend::render_children( $this );

		echo "<div class=\"bu-ajx-data\" style=\"display:none\"></div></div>";

		remove_filter( 'bricks/element/render_attributes', [ '\BricksUltimate\Helpers', 'bu_add_attributes' ], 1000, 3 );
		remove_filter( 'woocommerce_is_attribute_in_product_name', '__return_false' );
	}

	public static function render_builder() {
		// In the builder: add products to cart if cart is empty for a better user experience
		\Bricks\Woocommerce_Helpers::maybe_populate_cart_contents();
	?>
		<script type="text/x-template" id="tmpl-bricks-element-bu-mini-cart">
			<component :is="tag" :data-post-id="bricks.postId">
				<bricks-nestable :element="element" />
			</component>
		</script>
		<?php
	}
}