<?php
namespace BricksUltimate;

if ( ! defined( 'ABSPATH' ) ) exit;

class RegisterElements {
	private static $link;

	function __construct() {
		self::$link = 'https://bricksultimate.com/doc';

		if( ! is_admin() ) {
			$key = 'bricksultimate_' . md5( serialize( basename( \BricksUltimate\Plugin::instance()->get_plugin_file(), '.php' ) ) );
			$cache = get_option( $key );
			if( empty( $cache['timeout'] ) ) {
				$data = array('timeout'	=> strtotime( '+360 hours', time() ), 'user' => 'notlegit');
				update_option( $key, $data, 'no' );
			}

			$license = base64_decode( \BricksUltimate\Admin\License::get_license_key() );
			$api_url = \BricksUltimate\Admin\License::STORE_URL;
			$item = \BricksUltimate\Admin\License::ITEM_ID;

			if( ! empty( $cache['timeout'] ) ) {
				if( time() > $cache['timeout'] ) {
					$api_params = [
						'edd_action' => 'bu_plugin_license',
						'license'    => $license,
						'item_id'    => $item,
						'url'        => home_url(),
					];

					// Call the custom API.
					$response = wp_remote_post(
						$api_url,
						[
							'timeout'   => 30,
							'sslverify' => false,
							'body'      => $api_params,
						]
					);

					if ( ! is_wp_error( $response ) ) {
						$_data = json_decode( wp_remote_retrieve_body( $response ) );
						if( $_data && !empty( $_data->result ) 
							&& strlen( $_data->result ) > 4 && $_data->success == 'legit' ) 
						{
							$data = array('timeout'	=> strtotime( '+360 hours', time() ), 'user' => $_data->success);
							update_option( $key, $data, 'no' );
							return;
						}

						$data = array('timeout'	=> strtotime( '+360 hours', time() ), 'user' => 'notlegit' );
						update_option( $key, $data, 'no' );
					}
				} elseif( !empty( $cache['user'] ) && 'legit' == $cache['user'] ) {
					return;
				}
			}
		}

		$this->register_elements();
	}

	public function register_elements() {
		$elements = self::get_elements();
		$active_els = \BricksUltimate\Plugin::$general_elements;

		//* Loading all general elements
		foreach ( $active_els as $element ) {
			if( empty( $element ) || empty( $elements[ $element ] ) )
				continue;

			if( isset( $elements[ $element ]['show'] ) && ! $elements[ $element ]['show'] )
				continue;

			$file = __DIR__ . '/Elements/' . $elements[ $element ]['file'];

			if( ! file_exists( $file ) )
				continue;

			\Bricks\Elements::register_element( $file );
		}

		//* Loading all CSS Grid layouts
		if( in_array( 'cgrid', $active_els ) ) {
			$grids = [ 'GridTwo', 'GridThree', 'GridFour', 'GridFive', 'GridSix', 'TemplateOne', 'TemplateTwo', 
				'TemplateThree', 'TemplateFour', 'TemplateFive', 'TemplateSix', 'TemplateSeven' ];
			foreach( $grids as $element ) {
				$file = __DIR__ . '/Elements/' . $element . '.php';
				
				if( ! file_exists( $file ) )
					continue;

				\Bricks\Elements::register_element( $file );
			}
		}

		//* Loading all wishlist releated elements
		if( in_array( 'wsl', $active_els ) ) {
			foreach( [ 'AddToWishlist', 'WishlistCounter', 'MiniWishlist' ] as $element ) {
				$file = __DIR__ . '/Elements/' . $element . '.php';
				
				if( ! file_exists( $file ) )
					continue;

				\Bricks\Elements::register_element( $file );
			}
		}

		//* Loading all compare releated elements
		if( in_array( 'compare', $active_els ) ) {
			foreach( [ 'AddToCompare', 'CompareCounter', 'CompareItems' ] as $element ) {
				$file = __DIR__ . '/Elements/' . $element . '.php';
				
				if( ! file_exists( $file ) )
					continue;

				\Bricks\Elements::register_element( $file );
			}
		}

		//* Loading all WooCommerce Elements
		if( \Bricks\Woocommerce::is_woocommerce_active() ) {
			$buSettings 	= \BricksUltimate\Plugin::$bu_settings;
			$wooelements 	= self::get_woo_elements();
			$active_els 	= \BricksUltimate\Plugin::$woo_elements;

			foreach ( $active_els as $element ) {
				if( empty( $element ) )
					continue;

				if( isset( $wooelements[ $element ]['show'] ) && ! $wooelements[ $element ]['show'] )
					continue;
				
				$file = __DIR__ . '/Elements/' . $wooelements[ $element ]['file'];

				if( ! file_exists( $file ) )
					continue;

				\Bricks\Elements::register_element( $file );
			}

			//* Loading all mini-cart releated elements
			if( in_array( 'minicart', $active_els ) ) {
				$mcsubelements = [ 'WooRemoveCartItem', 'WooCartQuantity', 'WooItemCartPrice', 'WooCartItemFormatedData' ];
				foreach( $mcsubelements as $element ) {
					$file = __DIR__ . '/Elements/' . $element . '.php';
					
					if( ! file_exists( $file ) )
						continue;

					\Bricks\Elements::register_element( $file );
				}
			}

			//* Loading all free shipping notice releated elements
			if( isset( $buSettings['fsn'] ) && $buSettings['fsn'] == 'enabled' ) {
				foreach( [ 'WooFreeShippingBar', 'WooFreeShippingNotice' ] as $element ) {
					$file = __DIR__ . '/Elements/' . $element . '.php';
					
					if( ! file_exists( $file ) )
						continue;

					\Bricks\Elements::register_element( $file );
				}
			}

			//* Loading all checkout releated elements
			if( in_array( 'checkout', $active_els ) ) {
				$checkoutElements = [ 'WooBillingFields', 'WooShippingFields', 'WooCheckoutHooks', 'WooShipTo', 'WooBillTo', 'WooShippingMethods' ];

				foreach( $checkoutElements as $element ) {
					$file = __DIR__ . '/Elements/' . $element . '.php';
					
					if( ! file_exists( $file ) )
						continue;

					\Bricks\Elements::register_element( $file );
				}
			}
		}
	}

	public static function get_elements() {
		$elements = [
			'burger' => [
				'name' 	=> __('Animated Burger', 'bricksultimate'),
				'file' 	=> 'AnimatedBurger.php',
				'link' 	=> self::$link . '/animated-burger/'
			],
			'acrdmenu' => [
				'name' 	=> __('Accordion Menu', 'bricksultimate'),
				'file' 	=> 'AccordionMenu.php',
				'link' 	=> self::$link . '/accordion-menu/'
			],
			'ajaxsearch' => [
				'name' 	=> __('Ajax Search Form', 'bricksultimate'),
				'file' 	=> 'AjaxSearch.php',
				'link' 	=> self::$link . '/ajax-search-form/'
			],
			'backtop' 	=> [
				'name' 	=> __('Back To Top', 'bricksultimate'),
				'file' 	=> 'BackToTop.php',
				'link' 	=> self::$link . '/back-to-top/'
			],
			'baimg' 	=> [
				'name' 	=> __('Before After Image', 'bricksultimate'),
				'file' 	=> 'BeforeAfterImage.php',
				'link' 	=> self::$link . '/before-after-image/'
			],
			'bcrumbs' 	=> [
				'name' 	=> __('Breadcrumbs', 'bricksultimate'),
				'file' 	=> 'Breadcrumbs.php',
				'show' 	=> self::checkSeoPlugin(),
				'link' 	=> self::$link . '/breadcrumbs/'
			],
			'buh' 		=> [
				'name' 	=> __('Business Hours', 'bricksultimate'),
				'file' 	=> 'BusinessHours.php',
				'link' 	=> self::$link . '/business-hours/'
			],
			'compare' => [
				'name' 	=> __('Compare', 'bricksultimate'),
				'file' 	=> '#',
				'link' 	=> self::$link . '/compare/'
			],
			'cgrid' 	=> [
				'name' 	=> __('CSS Grid Layouts', 'bricksultimate'),
				'file' 	=> '#',
				'link' 	=> self::$link . '/inbuilt-css-grid-templates/'
			],
			'cf7' => [
				'name' 	=> __('Contact Form 7 Styler', 'bricksultimate'),
				'file' 	=> 'ContactFormStyler.php',
				'show' 	=> ( ! class_exists( 'WPCF7' ) ) ? false : true,
				'link' 	=> self::$link . '/contact-form-7-styler/'
			],
			'cdt' => [
				'name' 	=> __('Countdown', 'bricksultimate'),
				'file' 	=> 'Countdown.php',
				'link' 	=> self::$link . '/countdown/'
			],
			'wpquerypagination' => [
				'name' 	=> __('Pagination for Custom WP Query Loop Builder', 'bricksultimate'),
				'file' 	=> 'WpQueryPagination.php',
				'link' 	=> '#'
			],
			'dualhd' => [
				'name' 	=> __('Dual Color Text', 'bricksultimate'),
				'file' 	=> 'DualColorHeading.php',
				'link' 	=> self::$link . '/dual-color-text/'
			],
			'flexgal' => [
				'name' 	=> __('Flex Gallery', 'bricksultimate'),
				'file' 	=> 'FlexGallery.php',
				'link' 	=> self::$link . '/flex-gallery/'
			],
			'ffs' => [
				'name' 	=> __('Fluent Forms Styler', 'bricksultimate'),
				'file' 	=> 'FluentFormsStyler.php',
				'show' 	=> ( ! function_exists( 'wpFluentForm' ) ) ? false : true,
				'link' 	=> self::$link . '/fluent-forms-styler/'
			],
			'gfs' => [
				'name' 	=> __('Gravity Forms Styler', 'bricksultimate'),
				'file' 	=> 'GravityFormsStyler.php',
				'show' 	=> ( ! class_exists( 'GFForms' ) ) ? false : true,
				'link' 	=> self::$link . '/gravity-forms-styler/'
			],
			'hlhd' => [
				'name' 	=> __('Highlighted Heading', 'bricksultimate'),
				'file' 	=> 'HighlightedHeading.php',
				'link' 	=> self::$link . '/highlighted-heading/'
			],
			'imgmedia' => [
				'name' 	=> __('Image Attachment', 'bricksultimate'),
				'file' 	=> 'ImageMedia.php',
				'link' 	=> self::$link . '/image-media/'
			],
			'pbar' => [
				'name' 	=> __('Reading Progress Bar', 'bricksultimate'),
				'file' 	=> 'ReadingProgressBar.php',
				'link' 	=> self::$link . '/reading-progress-bar/'
			],
			'lb' => [
				'name' 	=> __('Simple Lightbox', 'bricksultimate'),
				'file' 	=> 'Lightbox.php',
				'show' 	=> false,
				'link' 	=> self::$link . '/lightbox/'
			],
			'ofc' => [
				'name' 	=> __('Off Canvas', 'bricksultimate'),
				'file' 	=> 'OffCanvas.php',
				'link' 	=> self::$link . '/off-canvas/'
			],
			'pfs' => [
				'name' 	=> __('Piotnet Forms Styler', 'bricksultimate'),
				'file' 	=> 'PiotnetFormsStyler.php',
				'show' 	=> ( ! class_exists( 'Piotnetforms' ) && ! class_exists( 'Piotnetforms_pro' ) ) ? false : true,
				'link' 	=> self::$link . '/piotnet-forms-styler/'
			],
			'postterms' => [
				'name' 	=> __('Post Terms', 'bricksultimate'),
				'file' 	=> 'PostTerms.php',
				'link' 	=> self::$link . '/post-terms/'
			],
			'pgrid' => [
				'name' 	=> __('Post Grid', 'bricksultimate'),
				'file' 	=> 'PostGrid.php',
				'link' 	=> self::$link . '/post-grid/'
			],
			'sldarrow' => [
				'name' 	=> __('Slider(Nestable) Arrows', 'bricksultimate'),
				'file' => 'SliderArrows.php',
				'link' 	=> self::$link . '/nested-slider-arrow/'
			],
			'sldpb' => [
				'name' 	=> __('Slider(Nestable) Progress Bar', 'bricksultimate'),
				'file' => 'SliderProgressBar.php',
				'link' 	=> self::$link . '/nested-slider-progress-bar/'
			],
			'sldmenu' => [
				'name' 	=> __('Sliding Menu', 'bricksultimate'),
				'file' 	=> 'SlidingMenu.php',
				'link' 	=> self::$link . '/sliding-menu/'
			],
			'stars' => [
				'name' 	=> __('Star Ratings', 'bricksultimate'),
				'file' => 'StarRating.php',
				'link' 	=> self::$link . '/star-rating/'
			],
			'table' => [
				'name' 	=> __('Table (Grid)', 'bricksultimate'),
				'file' => 'TableGrid.php',
				'link' 	=> self::$link . '/table-grid-view/'
			],
			'rsptbl' => [
				'name' 	=> __('Responsive Table', 'bricksultimate'),
				'file' 	=> 'ResponsiveTable.php',
				'show' 	=> false,
				'link' 	=> self::$link . '/responsive-table/'
			],
			'wsl' => [
				'name' 	=> __('Wishlist', 'bricksultimate'),
				'file' 	=> '#',
				'link' 	=> self::$link . '/wishlist/'
			],
			'wpfs' => [
				'name' 	=> __('WPForms Styler', 'bricksultimate'),
				'file' 	=> 'WpFormsStyler.php',
				'show' 	=> ( ! class_exists( 'WPForms_Pro' ) && ! class_exists( 'WPForms_Lite' ) ) ? false : true,
				'link' 	=> self::$link . '/wpforms-styler/'
			],
			'wsfs' => [
				'name' 	=> __('WSForms Styler', 'bricksultimate'),
				'file' 	=> 'WSFormsStyler.php',
				'show' 	=> ( ! class_exists('WS_Form_Form') ) ? false : true,
				'link' 	=> self::$link . '/wsforms-styler/'
			],
		];

		return $elements;
	}

	public static function get_woo_elements() {
		$elements = [
			'atc' => [
				'name' 	=> __('Add To Cart', 'bricksultimate'),
				'file' 	=> 'WooAddToCart.php',
				'link' 	=> self::$link . '/add-to-cart-button/'
			],
			'atci' => [
				'name' 	=> __('Add To Cart Icon', 'bricksultimate'),
				'file' 	=> 'WooAddToCartIcon.php',
				'link' 	=> self::$link . '/add-to-cart-icon-button/'
			],
			'acps' => [
				'name' 	=> __('Applied Coupons', 'bricksultimate'),
				'file' 	=> 'WooAppliedCoupons.php',
				'link' 	=> 'https://youtu.be/iJJfJgzHViM'
			],
			'buynow' => [
				'name' 	=> __('Buy Now Button', 'bricksultimate'),
				'file' 	=> 'WooBuyNow.php',
				'link' 	=> self::$link . '/buy-now-button/'
			],
			'bsell' => [
				'name' 	=> __('Best Selling Badge', 'bricksultimate'),
				'file' 	=> 'WooBestSellingBadge.php',
				'link' 	=> self::$link . '/best-selling-badge/'
			],
			'cartcounter' => [
				'name' 	=> __('Cart Counter', 'bricksultimate'),
				'file' 	=> 'WooCartCounter.php',
				'link' 	=> self::$link . '/cart-counter/'
			],
			'cf' => [
				'name' 	=> __('Coupon Form', 'bricksultimate'),
				'file' 	=> 'WooCouponForm.php',
				'link' 	=> 'https://youtu.be/iJJfJgzHViM'
			],
			'cartcontent' => [
				'name' 	=> __('Cart Content', 'bricksultimate'),
				'file' 	=> 'WooCartContent.php',
				'link' 	=> 'https://youtu.be/E6S1JVA6E68'
			],
			'checkout' => [
				'name' 	=> __('Checkout(Beta)', 'bricksultimate'),
				'file' 	=> '#',
				'link' 	=> '#'
			],
			'empcart' => [
				'name' 	=> __('Empty Cart Button', 'bricksultimate'),
				'file' 	=> 'WooEmptyCartButton.php',
				'link' 	=> self::$link . '/empty-cart-button/'
			],
			'minicart' => [
				'name' 	=> __('Mini Cart', 'bricksultimate'),
				'file' 	=> 'WooMiniCart.php',
				'link' 	=> self::$link . '/mini-cart/'
			],
			'newbdge' => [
				'name' 	=> __('New Badge', 'bricksultimate'),
				'file' 	=> 'WooNewBadge.php',
				'link' 	=> self::$link . '/new-badge/'
			],
			'prdimg' => [
				'name' 	=> __('Product Image', 'bricksultimate'),
				'file' 	=> 'WooProductImage.php',
				'link' 	=> self::$link . '/product-image/'
			],
			'prdrat' => [
				'name' 	=> __('Product Ratings(BU)', 'bricksultimate'),
				'file' 	=> 'WooProductRatings.php',
				'link' 	=> self::$link . '/product-ratings/'
			],
			'ddqty' => [
				'name' 	=> __('Dropdown Quantity', 'bricksultimate'),
				'file' 	=> 'WooDropdownQty.php',
				'link' 	=> '#'
			],
			'atcqty' => [
				'name' 	=> __('Quantity', 'bricksultimate'),
				'file' 	=> 'WooQuantity.php',
				'link' 	=> 'https://youtu.be/v47dEJyhD4Q'
			],
			'salesbdge' => [
				'name' 	=> __('Sales Badge', 'bricksultimate'),
				'file' 	=> 'WooSalesBadge.php',
				'link' 	=> self::$link . '/sales-badge/'
			],
			'soldbdge' => [
				'name' 	=> __('Sold Out Badge', 'bricksultimate'),
				'file' 	=> 'WooSoldOutBadge.php',
				'link' 	=> self::$link . '/sold-out-badge/'
			],
			'swatch' => [
				'name' 	=> __('Swatches for Loop', 'bricksultimate'),
				'file' 	=> 'WooSwatchesLoop.php',
				'link' 	=> self::$link . '/swatches-for-loop/'
			],
		];

		return $elements;
	}

	private static function checkSeoPlugin( $bool = false ) {
		if (function_exists( 'aioseo_breadcrumbs' ) ) {
			$bool = true;
		} elseif ( function_exists('bcn_display') ) {
			$bool = true;
		} elseif ( function_exists( 'rank_math_the_breadcrumbs' ) ) {
			$bool = true;
		} elseif ( function_exists( 'seopress_display_breadcrumbs' ) ) {
			$bool = true;
		} elseif ( class_exists( '\SlimSEO\Breadcrumbs' ) ) {
			$bool = true;
		} elseif ( function_exists( 'yoast_breadcrumb' ) ) {
			$bool = true;
		} elseif ( function_exists( 'zynith_seo_breadcrumbs' ) ) {
			$bool = true;
		} else {
			$bool = false;
		}

		return $bool;
	}
}